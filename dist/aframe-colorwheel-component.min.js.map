{"version":3,"sources":["webpack:///aframe-colorwheel-component.min.js","webpack:///webpack/bootstrap ce87b7330f6134d8fcde","webpack:///./index.js","webpack:///./~/copy-to-clipboard/index.js","webpack:///./~/toggle-selection/index.js","webpack:///./src/utils.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_copyToClipboard","_copyToClipboard2","Event","AFRAME","registerComponent","dependencies","tweenDuration","tweenEasing","TWEEN","Easing","Cubic","Out","padding","hsv","h","s","v","color","schema","disabled","type","backgroundColor","wheelSize","showSelection","selectionSize","showHexValue","setPositionTween","item","fromPosition","toPosition","this","tween","Tween","to","onUpdate","position","x","y","z","easing","start","setColorTween","fromColor","toColor","THREE","Color","r","g","b","init","that","defaultMaterial","flatShading","transparent","fog","side","backgroundWidth","backgroundHeight","data","brightnessSliderHeight","brightnessSliderWidth","components","hasOwnProperty","background","document","createElement","setAttribute","el","appendChild","hexValueHeight","hexValueWidth","hexValueText","primitive","width","height","align","baseline","wrapCount","addEventListener","textEl","getAttribute","value","colorWheel","brightnessSlider","selectionEl","colorCursorOptions","cursorRadius","cursorSegments","cursorColor","cursorMaterial","MeshBasicMaterial","colorCursor","brightnessCursor","geometry","TorusBufferGeometry","setObject3D","Mesh","bindMethods","setTimeout","initColorWheel","initBrightnessSlider","refreshRaycaster","evt","onHueDown","detail","intersection","point","onBrightnessDown","bind","updateColor","raycasterEl","scenes","querySelector","raycaster","refreshObjects","vertexShader","fragmentShader","material","ShaderMaterial","uniforms","color1","color2","getObject3D","needsUpdate","brightness","updateMatrixWorld","worldToLocal","cursorOffset","updatedPosition","radius","polarPosition","Math","sqrt","theta","PI","atan2","angle","rgb","hsvToRgb","hex","getHexString","eventDetail","style","emit","body","i","f","q","t","clamp","floor","round","update","oldData","tick","remove","pause","play","registerPrimitive","defaultComponents","colorwheel","mappings","backgroundcolor","showselection","wheelsize","selectionsize","showhexvalue","format","message","copyKey","test","navigator","userAgent","replace","copy","text","options","debug","reselectPrevious","range","selection","mark","success","deselectCurrent","createRange","getSelection","textContent","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","selectNode","addRange","successful","execCommand","Error","err","console","error","warn","window","clipboardData","setData","defaultMessage","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","push","getRangeAt","tagName","toUpperCase","blur","forEach","focus","name","dispatchEvent","CustomEvent"],"mappings":"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","file":"aframe-colorwheel-component.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _copyToClipboard = __webpack_require__(2);\n\t\n\tvar _copyToClipboard2 = _interopRequireDefault(_copyToClipboard);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Colorwheel for A-FRAME Material\n\t * @author Mo Kargas (DEVLAD) mo@devlad.com\n\t */\n\t\n\tvar Event = __webpack_require__(4);\n\t\n\t\n\tAFRAME.registerComponent('colorwheel', {\n\t  dependencies: ['raycaster'],\n\t  tweenDuration: 280,\n\t  tweenEasing: TWEEN.Easing.Cubic.Out,\n\t  padding: 0.15,\n\t  hsv: {\n\t    h: 0.0,\n\t    s: 0.0,\n\t    v: 1.0\n\t  },\n\t  color: '#ffffff',\n\t  schema: {\n\t    disabled: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t    backgroundColor: {\n\t      type: 'color',\n\t      default: '#FFF'\n\t    },\n\t    //Size of the colorWheel. NOTE: Assumed in metres.\n\t    wheelSize: {\n\t      type: 'number',\n\t      default: 0.4\n\t    },\n\t    //Show color choice in an element\n\t    showSelection: {\n\t      type: 'boolean',\n\t      default: true\n\t    },\n\t    selectionSize: {\n\t      type: 'number',\n\t      default: 0.10\n\t    },\n\t    showHexValue: {\n\t      type: 'boolean',\n\t      default: false\n\t    }\n\t  },\n\t  //Util to animate between positions. Item represents a mesh or object containing a position\n\t  setPositionTween: function setPositionTween(item, fromPosition, toPosition) {\n\t    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function () {\n\t      item.position.x = this.x;\n\t      item.position.y = this.y;\n\t      item.position.z = this.z;\n\t    }).easing(this.tweenEasing).start();\n\t  },\n\t  //Util to animate between colors. Item represents a mesh or object's material\n\t  setColorTween: function setColorTween(item, fromColor, toColor) {\n\t    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function () {\n\t      item.color.r = this.r;\n\t      item.color.g = this.g;\n\t      item.color.b = this.b;\n\t    }).easing(this.tweenEasing).start();\n\t  },\n\t  init: function init() {\n\t    var that = this,\n\t        padding = this.padding,\n\t        defaultMaterial = {\n\t      color: '#ffffff',\n\t      flatShading: true,\n\t      transparent: true,\n\t      fog: false,\n\t      side: 'double'\n\t\n\t      //Background color of this interface\n\t      //TODO: Expose sizing for deeper customisation?\n\t    };this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2;\n\t    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2;\n\t    this.brightnessSliderWidth = 0.10;\n\t\n\t    //Check if we have the a-rounded component\n\t    if (AFRAME.components.hasOwnProperty('rounded')) {\n\t      this.background = document.createElement('a-rounded');\n\t      this.background.setAttribute('radius', 0.02);\n\t      this.background.setAttribute('position', {\n\t        x: -(this.data.wheelSize + padding),\n\t        y: -(this.data.wheelSize + padding),\n\t        z: -0.001\n\t      });\n\t    } else {\n\t      this.background = document.createElement('a-plane');\n\t      this.background.setAttribute('position', {\n\t        x: 0,\n\t        y: 0,\n\t        z: -0.001\n\t      });\n\t    }\n\t    this.background.setAttribute('width', this.backgroundWidth + 2 * padding);\n\t    this.background.setAttribute('height', this.backgroundHeight + 2 * padding);\n\t    this.background.setAttribute('material', 'shader', 'flat');\n\t    this.background.setAttribute('side', 'double');\n\t    this.el.appendChild(this.background);\n\t\n\t    //Show hex value display\n\t    if (this.data.showHexValue) {\n\t      var hexValueHeight = 0.1;\n\t      var hexValueWidth = 2 * (this.data.wheelSize + padding);\n\t\n\t      this.hexValueText = document.createElement('a-entity');\n\t\n\t      //A basic geo is required for interactions\n\t      this.hexValueText.setAttribute('geometry', {\n\t        primitive: 'plane',\n\t        width: hexValueWidth - this.brightnessSliderWidth,\n\t        height: hexValueHeight\n\t      });\n\t\n\t      this.hexValueText.setAttribute('material', defaultMaterial);\n\t      this.hexValueText.setAttribute('position', {\n\t        x: -this.brightnessSliderWidth,\n\t        y: this.data.wheelSize + hexValueHeight,\n\t        z: 0.0\n\t      });\n\t\n\t      this.hexValueText.setAttribute('material', 'opacity', 0);\n\t      this.hexValueText.setAttribute('text', {\n\t        width: hexValueWidth,\n\t        height: hexValueHeight,\n\t        align: 'right',\n\t        baseline: 'center',\n\t        wrapCount: 20.4,\n\t        color: '#666'\n\t      });\n\t\n\t      //Copy value to clipboard on click\n\t      this.hexValueText.addEventListener('click', function () {\n\t        var textEl = that.hexValueText.getAttribute('text');\n\t        (0, _copyToClipboard2.default)(textEl.value);\n\t      });\n\t\n\t      this.el.appendChild(this.hexValueText);\n\t    }\n\t\n\t    //Circle for colorwheel\n\t    this.colorWheel = document.createElement('a-circle');\n\t    this.colorWheel.setAttribute('radius', this.data.wheelSize);\n\t    this.colorWheel.setAttribute('material', defaultMaterial);\n\t    this.colorWheel.setAttribute('position', {\n\t      x: 0,\n\t      y: 0,\n\t      z: 0.001\n\t    });\n\t    this.el.appendChild(this.colorWheel);\n\t\n\t    //Plane for the brightness slider\n\t\n\t    this.brightnessSlider = document.createElement('a-plane');\n\t    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth);\n\t    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight);\n\t    this.brightnessSlider.setAttribute('material', defaultMaterial);\n\t    this.brightnessSlider.setAttribute('position', {\n\t      x: this.data.wheelSize + this.brightnessSliderWidth,\n\t      y: 0,\n\t      z: 0.001\n\t    });\n\t    this.el.appendChild(this.brightnessSlider);\n\t\n\t    //Plane the color selection element will inhabit\n\t    if (this.data.showSelection) {\n\t      this.selectionEl = document.createElement('a-circle');\n\t      this.selectionEl.setAttribute('radius', this.data.selectionSize);\n\t      this.selectionEl.setAttribute('material', defaultMaterial);\n\t\n\t      //Place in top left, lift slightly\n\t      this.selectionEl.setAttribute('position', {\n\t        x: -this.data.wheelSize,\n\t        y: this.data.wheelSize,\n\t        z: 0.001\n\t      });\n\t      this.el.appendChild(this.selectionEl);\n\t    }\n\t\n\t    //Color 'cursor'. We'll use this to indicate a rough color selection\n\t    this.colorCursorOptions = {\n\t      cursorRadius: 0.025,\n\t      cursorSegments: 32,\n\t      cursorColor: new THREE.Color(0x000000)\n\t    };\n\t    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n\t      color: this.colorCursorOptions.cursorColor,\n\t      transparent: true\n\t    });\n\t\n\t    this.colorCursor = document.createElement('a-entity');\n\t    this.brightnessCursor = document.createElement('a-entity');\n\t\n\t    var geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4);\n\t    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t\n\t    this.el.appendChild(this.colorCursor);\n\t    this.brightnessSlider.appendChild(this.brightnessCursor);\n\t    this.brightnessCursor.setAttribute('position', {\n\t      x: 0,\n\t      y: this.brightnessSliderHeight / 2,\n\t      z: 0\n\t    });\n\t\n\t    //Handlers\n\t    this.bindMethods();\n\t\n\t    setTimeout(function () {\n\t\n\t      that.el.initColorWheel();\n\t      that.el.initBrightnessSlider();\n\t      that.el.refreshRaycaster();\n\t\n\t      that.colorWheel.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onHueDown(evt.detail.intersection.point);\n\t      });\n\t\n\t      that.brightnessSlider.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onBrightnessDown(evt.detail.intersection.point);\n\t      });\n\t    }, 5);\n\t  },\n\t\n\t  bindMethods: function bindMethods() {\n\t    this.el.initColorWheel = this.initColorWheel.bind(this);\n\t    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this);\n\t    this.el.updateColor = this.updateColor.bind(this);\n\t    this.el.onHueDown = this.onHueDown.bind(this);\n\t    this.el.onBrightnessDown = this.onBrightnessDown.bind(this);\n\t    this.el.refreshRaycaster = this.refreshRaycaster.bind(this);\n\t  },\n\t\n\t  refreshRaycaster: function refreshRaycaster() {\n\t    var raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]');\n\t    raycasterEl.components.raycaster.refreshObjects();\n\t  },\n\t\n\t  initBrightnessSlider: function initBrightnessSlider() {\n\t    /*\n\t     * NOTE:\n\t     *\n\t     * In A-Painter, the brightness slider is actually a model submesh / element.\n\t     * Here we generate it using glsl here and add it to our plane material\n\t     */\n\t\n\t    var vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\\n        gl_FragColor = color;\\n      }\\n    ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        color1: {\n\t          type: 'c',\n\t          value: new THREE.Color(0xFFFFFF)\n\t        },\n\t        color2: {\n\t          type: 'c',\n\t          value: new THREE.Color(0x000000)\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    this.brightnessSlider.getObject3D('mesh').material = material;\n\t    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\t  },\n\t  initColorWheel: function initColorWheel() {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t    var vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        brightness: {\n\t          type: 'f',\n\t          value: this.hsv.v\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    colorWheel.material = material;\n\t    colorWheel.material.needsUpdate = true;\n\t  },\n\t  onBrightnessDown: function onBrightnessDown(position) {\n\t    var brightnessSlider = this.brightnessSlider.getObject3D('mesh');\n\t    var brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t\n\t    brightnessSlider.updateMatrixWorld();\n\t    brightnessSlider.worldToLocal(position);\n\t\n\t    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n\t    var cursorOffset = position.y + this.brightnessSliderHeight / 2;\n\t    var brightness = cursorOffset / this.brightnessSliderHeight;\n\t    var updatedPosition = {\n\t      x: 0,\n\t      y: position.y - this.brightnessSliderHeight / 2,\n\t      z: 0\n\t\n\t      //Set brightness cursor position to offset position\n\t      // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n\t    };this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition);\n\t\n\t    //Update material brightness\n\t    colorWheel.material.uniforms['brightness'].value = brightness;\n\t    this.hsv.v = brightness;\n\t    this.el.updateColor();\n\t  },\n\t  onHueDown: function onHueDown(position) {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        radius = this.data.wheelSize;\n\t\n\t    colorWheel.updateMatrixWorld();\n\t    colorWheel.worldToLocal(position);\n\t\n\t    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n\t    this.setPositionTween(colorCursor, colorCursor.position, position);\n\t\n\t    //Determine Hue and Saturation value from polar co-ordinates\n\t    var polarPosition = {\n\t      r: Math.sqrt(position.x * position.x + position.y * position.y),\n\t      theta: Math.PI + Math.atan2(position.y, position.x)\n\t    };\n\t\n\t    var angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\n\t    this.hsv.h = angle / 360;\n\t    this.hsv.s = polarPosition.r / radius;\n\t\n\t    this.el.updateColor();\n\t  },\n\t\n\t  updateColor: function updateColor() {\n\t    var rgb = this.hsvToRgb(this.hsv);\n\t    var color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\t    var hex = '#' + new THREE.Color(color).getHexString();\n\t\n\t    var selectionEl = this.selectionEl.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t\n\t    //Update indicator element of selected color\n\t    if (this.data.showSelection) {\n\t      //Uncomment for no tweens: selectionEl.material.color.set(color)\n\t      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color));\n\t      selectionEl.material.needsUpdate = true;\n\t    }\n\t\n\t    //Change cursor colors based on brightness\n\t    if (this.hsv.v >= 0.5) {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000));\n\t    } else {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF));\n\t    }\n\t\n\t    //If we have showHexValue set to true, update text\n\t    if (this.data.showHexValue) {\n\t      this.hexValueText.setAttribute('text', 'value', hex);\n\t    }\n\t\n\t    //Notify listeners the color has changed.\n\t    var eventDetail = {\n\t      style: color,\n\t      rgb: rgb,\n\t      hsv: this.hsv,\n\t      hex: hex\n\t    };\n\t\n\t    Event.emit(this.el, 'changecolor', eventDetail);\n\t    Event.emit(document.body, 'didchangecolor', eventDetail);\n\t  },\n\t  hsvToRgb: function hsvToRgb(hsv) {\n\t    var r, g, b, i, f, p, q, t;\n\t    var h = THREE.Math.clamp(hsv.h, 0, 1);\n\t    var s = THREE.Math.clamp(hsv.s, 0, 1);\n\t    var v = hsv.v;\n\t\n\t    i = Math.floor(h * 6);\n\t    f = h * 6 - i;\n\t    p = v * (1 - s);\n\t    q = v * (1 - f * s);\n\t    t = v * (1 - (1 - f) * s);\n\t    switch (i % 6) {\n\t      case 0:\n\t        r = v;\n\t        g = t;\n\t        b = p;\n\t        break;\n\t      case 1:\n\t        r = q;\n\t        g = v;\n\t        b = p;\n\t        break;\n\t      case 2:\n\t        r = p;\n\t        g = v;\n\t        b = t;\n\t        break;\n\t      case 3:\n\t        r = p;\n\t        g = q;\n\t        b = v;\n\t        break;\n\t      case 4:\n\t        r = t;\n\t        g = p;\n\t        b = v;\n\t        break;\n\t      case 5:\n\t        r = v;\n\t        g = p;\n\t        b = q;\n\t        break;\n\t    }\n\t    return {\n\t      r: Math.round(r * 255),\n\t      g: Math.round(g * 255),\n\t      b: Math.round(b * 255)\n\t    };\n\t  },\n\t  update: function update(oldData) {\n\t    this.background.setAttribute('color', this.data.backgroundColor);\n\t  },\n\t  tick: function tick() {},\n\t  remove: function remove() {},\n\t  pause: function pause() {},\n\t  play: function play() {}\n\t});\n\t\n\tAFRAME.registerPrimitive('a-colorwheel', {\n\t  defaultComponents: {\n\t    colorwheel: {}\n\t  },\n\t  mappings: {\n\t    disabled: 'colorwheel.disabled',\n\t    backgroundcolor: 'colorwheel.backgroundColor',\n\t    showselection: 'colorwheel.showSelection',\n\t    wheelsize: 'colorwheel.wheelSize',\n\t    selectionsize: 'colorwheel.selectionSize',\n\t    showhexvalue: 'colorwheel.showHexValue'\n\t  }\n\t});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar deselectCurrent = __webpack_require__(3);\n\t\n\tvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\t\n\tfunction format(message) {\n\t  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n\t  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n\t}\n\t\n\tfunction copy(text, options) {\n\t  var debug, message, reselectPrevious, range, selection, mark, success = false;\n\t  if (!options) { options = {}; }\n\t  debug = options.debug || false;\n\t  try {\n\t    reselectPrevious = deselectCurrent();\n\t\n\t    range = document.createRange();\n\t    selection = document.getSelection();\n\t\n\t    mark = document.createElement('span');\n\t    mark.textContent = text;\n\t    // reset user styles for span element\n\t    mark.style.all = 'unset';\n\t    // prevents scrolling to the end of the page\n\t    mark.style.position = 'fixed';\n\t    mark.style.top = 0;\n\t    mark.style.clip = 'rect(0, 0, 0, 0)';\n\t    // used to preserve spaces and line breaks\n\t    mark.style.whiteSpace = 'pre';\n\t    // do not inherit user-select (it may be `none`)\n\t    mark.style.webkitUserSelect = 'text';\n\t    mark.style.MozUserSelect = 'text';\n\t    mark.style.msUserSelect = 'text';\n\t    mark.style.userSelect = 'text';\n\t\n\t    document.body.appendChild(mark);\n\t\n\t    range.selectNode(mark);\n\t    selection.addRange(range);\n\t\n\t    var successful = document.execCommand('copy');\n\t    if (!successful) {\n\t      throw new Error('copy command was unsuccessful');\n\t    }\n\t    success = true;\n\t  } catch (err) {\n\t    debug && console.error('unable to copy using execCommand: ', err);\n\t    debug && console.warn('trying IE specific stuff');\n\t    try {\n\t      window.clipboardData.setData('text', text);\n\t      success = true;\n\t    } catch (err) {\n\t      debug && console.error('unable to copy using clipboardData: ', err);\n\t      debug && console.error('falling back to prompt');\n\t      message = format('message' in options ? options.message : defaultMessage);\n\t      window.prompt(message, text);\n\t    }\n\t  } finally {\n\t    if (selection) {\n\t      if (typeof selection.removeRange == 'function') {\n\t        selection.removeRange(range);\n\t      } else {\n\t        selection.removeAllRanges();\n\t      }\n\t    }\n\t\n\t    if (mark) {\n\t      document.body.removeChild(mark);\n\t    }\n\t    reselectPrevious();\n\t  }\n\t\n\t  return success;\n\t}\n\t\n\tmodule.exports = copy;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function () {\n\t  var selection = document.getSelection();\n\t  if (!selection.rangeCount) {\n\t    return function () {};\n\t  }\n\t  var active = document.activeElement;\n\t\n\t  var ranges = [];\n\t  for (var i = 0; i < selection.rangeCount; i++) {\n\t    ranges.push(selection.getRangeAt(i));\n\t  }\n\t\n\t  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n\t    case 'INPUT':\n\t    case 'TEXTAREA':\n\t      active.blur();\n\t      break;\n\t\n\t    default:\n\t      active = null;\n\t      break;\n\t  }\n\t\n\t  selection.removeAllRanges();\n\t  return function () {\n\t    selection.type === 'Caret' &&\n\t    selection.removeAllRanges();\n\t\n\t    if (!selection.rangeCount) {\n\t      ranges.forEach(function(range) {\n\t        selection.addRange(range);\n\t      });\n\t    }\n\t\n\t    active &&\n\t    active.focus();\n\t  };\n\t};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  emit: function emit(el, name, data) {\n\t    el.dispatchEvent(new CustomEvent(name, { detail: data }));\n\t  }\n\t};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// aframe-colorwheel-component.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ce87b7330f6134d8fcde","/**\n * Colorwheel for A-FRAME Material\n * @author Mo Kargas (DEVLAD) mo@devlad.com\n */\n\nconst Event = require('./src/utils')\nimport copy from 'copy-to-clipboard'\n\nAFRAME.registerComponent('colorwheel', {\n  dependencies: ['raycaster'],\n  tweenDuration: 280,\n  tweenEasing: TWEEN.Easing.Cubic.Out,\n  padding: 0.15,\n  hsv: {\n    h: 0.0,\n    s: 0.0,\n    v: 1.0\n  },\n  color: '#ffffff',\n  schema: {\n    disabled: {\n      type: 'boolean',\n      default: false\n    },\n    backgroundColor: {\n      type: 'color',\n      default: '#FFF'\n    },\n    //Size of the colorWheel. NOTE: Assumed in metres.\n    wheelSize: {\n      type: 'number',\n      default: 0.4\n    },\n    //Show color choice in an element\n    showSelection: {\n      type: 'boolean',\n      default: true\n    },\n    selectionSize: {\n      type: 'number',\n      default: 0.10\n    },\n    showHexValue: {\n      type: 'boolean',\n      default: false\n    }\n  },\n  //Util to animate between positions. Item represents a mesh or object containing a position\n  setPositionTween: function(item, fromPosition, toPosition) {\n    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function() {\n      item.position.x = this.x\n      item.position.y = this.y\n      item.position.z = this.z\n    }).easing(this.tweenEasing).start()\n  },\n  //Util to animate between colors. Item represents a mesh or object's material\n  setColorTween: function(item, fromColor, toColor) {\n    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function() {\n      item.color.r = this.r\n      item.color.g = this.g\n      item.color.b = this.b\n    }).easing(this.tweenEasing).start()\n  },\n  init: function() {\n    const that = this,\n      padding = this.padding,\n      defaultMaterial = {\n        color: '#ffffff',\n        flatShading: true,\n        transparent: true,\n        fog: false,\n        side: 'double'\n      }\n\n    //Background color of this interface\n    //TODO: Expose sizing for deeper customisation?\n    this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2\n    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2\n    this.brightnessSliderWidth = 0.10\n\n    //Check if we have the a-rounded component\n    if (AFRAME.components.hasOwnProperty('rounded')) {\n      this.background = document.createElement('a-rounded')\n      this.background.setAttribute('radius', 0.02)\n      this.background.setAttribute('position', {\n        x: -(this.data.wheelSize + padding),\n        y: -(this.data.wheelSize + padding),\n        z: -0.001\n      })\n    } else {\n      this.background = document.createElement('a-plane')\n      this.background.setAttribute('position', {\n        x: 0,\n        y: 0,\n        z: -0.001\n      })\n    }\n    this.background.setAttribute('width', this.backgroundWidth + 2 * padding)\n    this.background.setAttribute('height', this.backgroundHeight + 2 * padding)\n    this.background.setAttribute('material', 'shader', 'flat')\n    this.background.setAttribute('side', 'double')\n    this.el.appendChild(this.background)\n\n    //Show hex value display\n    if (this.data.showHexValue) {\n      let hexValueHeight = 0.1\n      let hexValueWidth = 2 * (this.data.wheelSize + padding)\n\n      this.hexValueText = document.createElement('a-entity')\n\n      //A basic geo is required for interactions\n      this.hexValueText.setAttribute('geometry', {\n        primitive: 'plane',\n        width: hexValueWidth - this.brightnessSliderWidth,\n        height:hexValueHeight\n      })\n\n      this.hexValueText.setAttribute('material', defaultMaterial)\n      this.hexValueText.setAttribute('position', {\n        x: - this.brightnessSliderWidth ,\n        y: this.data.wheelSize + hexValueHeight,\n        z: 0.0\n      })\n\n      this.hexValueText.setAttribute('material', 'opacity', 0)\n      this.hexValueText.setAttribute('text', {\n        width: hexValueWidth,\n        height: hexValueHeight,\n        align : 'right',\n        baseline: 'center',\n        wrapCount: 20.4,\n        color: '#666'\n      })\n\n      //Copy value to clipboard on click\n      this.hexValueText.addEventListener('click', function(){\n        let textEl = that.hexValueText.getAttribute('text')\n        copy(textEl.value)\n      })\n\n      this.el.appendChild(this.hexValueText)\n    }\n\n    //Circle for colorwheel\n    this.colorWheel = document.createElement('a-circle')\n    this.colorWheel.setAttribute('radius', this.data.wheelSize)\n    this.colorWheel.setAttribute('material', defaultMaterial)\n    this.colorWheel.setAttribute('position', {\n      x: 0,\n      y: 0,\n      z: 0.001\n    })\n    this.el.appendChild(this.colorWheel)\n\n    //Plane for the brightness slider\n\n    this.brightnessSlider = document.createElement('a-plane')\n    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth)\n    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight)\n    this.brightnessSlider.setAttribute('material', defaultMaterial)\n    this.brightnessSlider.setAttribute('position', {\n      x: this.data.wheelSize + this.brightnessSliderWidth,\n      y: 0,\n      z: 0.001\n    })\n    this.el.appendChild(this.brightnessSlider)\n\n    //Plane the color selection element will inhabit\n    if (this.data.showSelection) {\n      this.selectionEl = document.createElement('a-circle')\n      this.selectionEl.setAttribute('radius', this.data.selectionSize)\n      this.selectionEl.setAttribute('material', defaultMaterial)\n\n      //Place in top left, lift slightly\n      this.selectionEl.setAttribute('position', {\n        x: -this.data.wheelSize,\n        y: this.data.wheelSize,\n        z: 0.001\n      })\n      this.el.appendChild(this.selectionEl)\n    }\n\n    //Color 'cursor'. We'll use this to indicate a rough color selection\n    this.colorCursorOptions = {\n      cursorRadius: 0.025,\n      cursorSegments: 32,\n      cursorColor: new THREE.Color(0x000000)\n    }\n    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n      color: this.colorCursorOptions.cursorColor,\n      transparent: true\n    });\n\n    this.colorCursor = document.createElement('a-entity')\n    this.brightnessCursor = document.createElement('a-entity')\n\n    let geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4)\n    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\n    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\n\n    this.el.appendChild(this.colorCursor)\n    this.brightnessSlider.appendChild(this.brightnessCursor)\n    this.brightnessCursor.setAttribute('position', {\n      x: 0,\n      y: this.brightnessSliderHeight / 2,\n      z: 0\n    })\n\n\n    //Handlers\n    this.bindMethods()\n\n    setTimeout(() => {\n\n      that.el.initColorWheel()\n      that.el.initBrightnessSlider()\n      that.el.refreshRaycaster()\n\n      that.colorWheel.addEventListener('click', function(evt) {\n        if (that.data.disabled) return;\n        that.el.onHueDown(evt.detail.intersection.point)\n      });\n\n      that.brightnessSlider.addEventListener('click', function(evt) {\n        if (that.data.disabled) return;\n        that.el.onBrightnessDown(evt.detail.intersection.point)\n      });\n\n    }, 5)\n  },\n\n  bindMethods: function() {\n    this.el.initColorWheel = this.initColorWheel.bind(this)\n    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this)\n    this.el.updateColor = this.updateColor.bind(this)\n    this.el.onHueDown = this.onHueDown.bind(this)\n    this.el.onBrightnessDown = this.onBrightnessDown.bind(this)\n    this.el.refreshRaycaster = this.refreshRaycaster.bind(this)\n  },\n\n  refreshRaycaster: function() {\n    const raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]')\n    raycasterEl.components.raycaster.refreshObjects()\n  },\n\n  initBrightnessSlider: function() {\n    /*\n     * NOTE:\n     *\n     * In A-Painter, the brightness slider is actually a model submesh / element.\n     * Here we generate it using glsl here and add it to our plane material\n     */\n\n    const vertexShader = `\n      varying vec2 vUv;\n      void main(){\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n      }\n    `\n\n    const fragmentShader = `\n      uniform vec3 color1;\n      uniform vec3 color2;\n      varying vec2 vUv;\n\n      void main(){\n        vec4 c1 = vec4(color1, 1.0);\n  \t    vec4 c2 = vec4(color2, 1.0);\n\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\n        gl_FragColor = color;\n      }\n    `\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        color1: {\n          type: 'c',\n          value: new THREE.Color(0xFFFFFF)\n        },\n        color2: {\n          type: 'c',\n          value: new THREE.Color(0x000000)\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    })\n\n    this.brightnessSlider.getObject3D('mesh').material = material;\n    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\n  },\n  initColorWheel: function() {\n    const colorWheel = this.colorWheel.getObject3D('mesh')\n    const vertexShader = `\n\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix * mvPosition;\n      }\n    `;\n\n    const fragmentShader = `\n      #define M_PI2 6.28318530718\n      uniform float brightness;\n      varying vec2 vUv;\n      vec3 hsb2rgb(in vec3 c){\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n          return c.z * mix( vec3(1.0), rgb, c.y);\n      }\n\n      void main() {\n        vec2 toCenter = vec2(0.5) - vUv;\n        float angle = atan(toCenter.y, toCenter.x);\n        float radius = length(toCenter) * 2.0;\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\n        gl_FragColor = vec4(color, 1.0);\n      }\n      `;\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        brightness: {\n          type: 'f',\n          value: this.hsv.v\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    });\n\n    colorWheel.material = material\n    colorWheel.material.needsUpdate = true\n  },\n  onBrightnessDown: function(position) {\n    const brightnessSlider = this.brightnessSlider.getObject3D('mesh')\n    const brightnessCursor = this.brightnessCursor.getObject3D('mesh')\n    const colorWheel = this.colorWheel.getObject3D('mesh')\n\n    brightnessSlider.updateMatrixWorld()\n    brightnessSlider.worldToLocal(position)\n\n    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n    let cursorOffset = position.y + this.brightnessSliderHeight / 2\n    let brightness = cursorOffset / this.brightnessSliderHeight\n    let updatedPosition = {\n      x: 0,\n      y: position.y - this.brightnessSliderHeight / 2,\n      z: 0\n    }\n\n    //Set brightness cursor position to offset position\n    // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n    this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition)\n\n    //Update material brightness\n    colorWheel.material.uniforms['brightness'].value = brightness\n    this.hsv.v = brightness\n    this.el.updateColor()\n  },\n  onHueDown: function(position) {\n    const colorWheel = this.colorWheel.getObject3D('mesh'),\n      colorCursor = this.colorCursor.getObject3D('mesh'),\n      radius = this.data.wheelSize\n\n    colorWheel.updateMatrixWorld()\n    colorWheel.worldToLocal(position)\n\n    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n    this.setPositionTween(colorCursor, colorCursor.position, position)\n\n    //Determine Hue and Saturation value from polar co-ordinates\n    let polarPosition = {\n      r: Math.sqrt(position.x * position.x + position.y * position.y),\n      theta: Math.PI + Math.atan2(position.y, position.x)\n    }\n\n    let angle = ((polarPosition.theta * (180 / Math.PI)) + 180) % 360\n    this.hsv.h = angle / 360\n    this.hsv.s = polarPosition.r / radius\n\n    this.el.updateColor()\n  },\n\n  updateColor: function() {\n    let rgb = this.hsvToRgb(this.hsv)\n    let color = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n    let hex = `#${new THREE.Color( color ).getHexString()}`\n\n    const selectionEl = this.selectionEl.getObject3D('mesh'),\n      colorCursor = this.colorCursor.getObject3D('mesh'),\n      brightnessCursor = this.brightnessCursor.getObject3D('mesh')\n\n    //Update indicator element of selected color\n    if (this.data.showSelection) {\n      //Uncomment for no tweens: selectionEl.material.color.set(color)\n      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color))\n      selectionEl.material.needsUpdate = true\n    }\n\n    //Change cursor colors based on brightness\n    if (this.hsv.v >= 0.5) {\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000))\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000))\n    } else {\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF))\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF))\n    }\n\n    //If we have showHexValue set to true, update text\n    if (this.data.showHexValue) {\n      this.hexValueText.setAttribute('text', 'value', hex)\n    }\n\n    //Notify listeners the color has changed.\n    let eventDetail = {\n      style: color,\n      rgb: rgb,\n      hsv: this.hsv,\n      hex: hex\n    };\n\n    Event.emit(this.el, 'changecolor', eventDetail)\n    Event.emit(document.body, 'didchangecolor', eventDetail)\n\n  },\n  hsvToRgb: function(hsv) {\n    var r, g, b, i, f, p, q, t;\n    var h = THREE.Math.clamp(hsv.h, 0, 1);\n    var s = THREE.Math.clamp(hsv.s, 0, 1);\n    var v = hsv.v;\n\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    return {\n      r: Math.round(r * 255),\n      g: Math.round(g * 255),\n      b: Math.round(b * 255)\n    };\n  },\n  update: function(oldData) {\n    this.background.setAttribute('color', this.data.backgroundColor)\n  },\n  tick: function() {},\n  remove: function() {},\n  pause: function() {},\n  play: function() {}\n});\n\nAFRAME.registerPrimitive('a-colorwheel', {\n  defaultComponents: {\n    colorwheel: {}\n  },\n  mappings: {\n    disabled: 'colorwheel.disabled',\n    backgroundcolor: 'colorwheel.backgroundColor',\n    showselection: 'colorwheel.showSelection',\n    wheelsize: 'colorwheel.wheelSize',\n    selectionsize: 'colorwheel.selectionSize',\n    showhexvalue: 'colorwheel.showHexValue'\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/copy-to-clipboard/index.js\n// module id = 2\n// module chunks = 0","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/toggle-selection/index.js\n// module id = 3\n// module chunks = 0","module.exports = {\n  emit: (el, name, data)=> {\n    el.dispatchEvent( new CustomEvent(name, {detail: data}) );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}