{"version":3,"sources":["webpack:///aframe-colorwheel-component.min.js","webpack:///webpack/bootstrap e9e9f699e2d1c0a9ac54?ce25","webpack:///./index.js?2645","webpack:///./src/utils.js?2ff8"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Event","AFRAME","registerComponent","dependencies","tweenDuration","tweenEasing","TWEEN","Easing","Cubic","Out","padding","hsv","h","s","v","color","schema","value","type","default","name","disabled","backgroundColor","wheelSize","showSelection","selectionSize","setPositionTween","item","fromPosition","toPosition","this","tween","Tween","to","onUpdate","position","x","y","z","easing","start","setColorTween","fromColor","toColor","THREE","Color","r","g","b","init","that","defaultMaterial","flatShading","transparent","fog","side","backgroundWidth","backgroundHeight","data","components","hasOwnProperty","background","document","createElement","setAttribute","console","debug","el","appendChild","colorWheel","brightnessSliderHeight","brightnessSliderWidth","brightnessSlider","selectionEl","colorCursorOptions","cursorRadius","cursorSegments","cursorColor","cursorMaterial","MeshBasicMaterial","colorCursor","brightnessCursor","geometry","TorusBufferGeometry","setObject3D","Mesh","bindMethods","setTimeout","initColorWheel","initBrightnessSlider","refreshRaycaster","addEventListener","evt","onHueDown","detail","intersection","point","onBrightnessDown","bind","updateColor","raycasterEl","scenes","querySelector","raycaster","refreshObjects","vertexShader","fragmentShader","material","ShaderMaterial","uniforms","color1","color2","getObject3D","needsUpdate","brightness","updateMatrixWorld","worldToLocal","cursorOffset","updatedPosition","radius","polarPosition","Math","sqrt","theta","PI","atan2","angle","rgb","hsvToRgb","emit","style","body","i","f","q","t","clamp","floor","round","update","oldData","tick","remove","pause","play","registerPrimitive","defaultComponents","colorwheel","mappings","backgroundcolor","showselection","wheelsize","selectionsize","dispatchEvent","CustomEvent"],"mappings":"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","file":"aframe-colorwheel-component.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * A-FRAME Material\n\t * @author Etienne Pinchon epinchon@student.42.us.org\n\t *\n\t * Colorwheel for A-FRAME Material\n\t * @author Mo Kargas (DEVLAD) mo@devlad.com\n\t */\n\t\n\tvar Event = __webpack_require__(1);\n\t\n\tAFRAME.registerComponent('colorwheel', {\n\t  dependencies: ['raycaster'],\n\t  tweenDuration: 280,\n\t  tweenEasing: TWEEN.Easing.Cubic.Out,\n\t  padding: 0.15,\n\t  hsv: {\n\t    h: 0.0,\n\t    s: 0.0,\n\t    v: 1.0\n\t  },\n\t  color: '#ffffff',\n\t  schema: {\n\t    value: {\n\t      type: 'string',\n\t      default: ''\n\t    },\n\t    name: {\n\t      type: 'string',\n\t      default: ''\n\t    },\n\t    disabled: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t    color: {\n\t      type: 'color',\n\t      default: '#000'\n\t    },\n\t    backgroundColor: {\n\t      type: 'color',\n\t      default: '#FFF'\n\t    },\n\t    //Size of the colorWheel. NOTE: Assumed in metres.\n\t    wheelSize: {\n\t      type: 'number',\n\t      default: 0.4\n\t    },\n\t    //Show color choice in an element\n\t    showSelection: {\n\t      type: 'boolean',\n\t      default: true\n\t    },\n\t    selectionSize: {\n\t      type: 'number',\n\t      default: 0.10\n\t    }\n\t  },\n\t  //Util to animate between positions. Item represents a mesh or object containing a position\n\t  setPositionTween: function setPositionTween(item, fromPosition, toPosition) {\n\t    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function () {\n\t      item.position.x = this.x;\n\t      item.position.y = this.y;\n\t      item.position.z = this.z;\n\t    }).easing(this.tweenEasing).start();\n\t  },\n\t  //Util to animate between colors. Item represents a mesh or object's material\n\t  setColorTween: function setColorTween(item, fromColor, toColor) {\n\t    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function () {\n\t      item.color.r = this.r;\n\t      item.color.g = this.g;\n\t      item.color.b = this.b;\n\t    }).easing(this.tweenEasing).start();\n\t  },\n\t  init: function init() {\n\t    var that = this,\n\t        padding = this.padding,\n\t        defaultMaterial = {\n\t      color: '#ffffff',\n\t      flatShading: true,\n\t      transparent: true,\n\t      fog: false,\n\t      side: 'double'\n\t\n\t      //Background color of this interface\n\t      //TODO: Expose sizing for deeper customisation?\n\t    };this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2;\n\t\n\t    //Check if we have the a-rounded component\n\t    if (AFRAME.components.hasOwnProperty('rounded')) {\n\t      this.background = document.createElement('a-rounded');\n\t      this.background.setAttribute('radius', 0.02);\n\t    } else {\n\t      this.background = document.createElement('a-entity');\n\t    }\n\t    console.debug(this.background);\n\t    this.background.setAttribute('width', this.backgroundWidth + 2 * padding);\n\t    this.background.setAttribute('height', this.backgroundHeight + 2 * padding);\n\t    this.background.setAttribute('position', {\n\t      x: -(this.data.wheelSize + padding),\n\t      y: -(this.data.wheelSize + padding),\n\t      z: -0.001\n\t    });\n\t    this.background.setAttribute('side', 'double');\n\t    this.el.appendChild(this.background);\n\t\n\t    //Circle for colorwheel\n\t    this.colorWheel = document.createElement('a-circle');\n\t    this.colorWheel.setAttribute('radius', this.data.wheelSize);\n\t    this.colorWheel.setAttribute('material', defaultMaterial);\n\t    this.colorWheel.setAttribute('position', {\n\t      x: 0,\n\t      y: 0,\n\t      z: 0\n\t    });\n\t    this.el.appendChild(this.colorWheel);\n\t\n\t    //Plane for the brightness slider\n\t    //TODO: Expose height and width for customisation?\n\t    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2;\n\t    this.brightnessSliderWidth = 0.10;\n\t\n\t    this.brightnessSlider = document.createElement('a-plane');\n\t    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth);\n\t    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight);\n\t    this.brightnessSlider.setAttribute('material', defaultMaterial);\n\t    this.brightnessSlider.setAttribute('position', {\n\t      x: this.data.wheelSize + this.brightnessSliderWidth,\n\t      y: 0,\n\t      z: 0\n\t    });\n\t    this.el.appendChild(this.brightnessSlider);\n\t\n\t    //Plane the color selection element will inhabit\n\t    if (this.data.showSelection) {\n\t      this.selectionEl = document.createElement('a-circle');\n\t      this.selectionEl.setAttribute('radius', this.data.selectionSize);\n\t      this.selectionEl.setAttribute('material', defaultMaterial);\n\t\n\t      //Place in top left, lift slightly\n\t      this.selectionEl.setAttribute('position', {\n\t        x: -this.data.wheelSize,\n\t        y: this.data.wheelSize,\n\t        z: 0.001\n\t      });\n\t      this.el.appendChild(this.selectionEl);\n\t    }\n\t\n\t    //Color 'cursor'. We'll use this to indicate a rough color selection\n\t    this.colorCursorOptions = {\n\t      cursorRadius: 0.025,\n\t      cursorSegments: 32,\n\t      cursorColor: new THREE.Color(0x000000)\n\t    };\n\t    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n\t      color: this.colorCursorOptions.cursorColor,\n\t      transparent: true\n\t    });\n\t\n\t    this.colorCursor = document.createElement('a-entity');\n\t    this.brightnessCursor = document.createElement('a-entity');\n\t\n\t    var geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4);\n\t    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t\n\t    this.el.appendChild(this.colorCursor);\n\t    this.brightnessSlider.appendChild(this.brightnessCursor);\n\t    this.brightnessCursor.setAttribute('position', {\n\t      x: 0,\n\t      y: this.brightnessSliderHeight / 2,\n\t      z: 0\n\t    });\n\t\n\t    //Handlers\n\t    this.bindMethods();\n\t\n\t    setTimeout(function () {\n\t\n\t      that.el.initColorWheel();\n\t      that.el.initBrightnessSlider();\n\t      that.el.refreshRaycaster();\n\t\n\t      that.colorWheel.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onHueDown(evt.detail.intersection.point);\n\t      });\n\t\n\t      that.brightnessSlider.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onBrightnessDown(evt.detail.intersection.point);\n\t      });\n\t    }, 5);\n\t  },\n\t\n\t  bindMethods: function bindMethods() {\n\t    this.el.initColorWheel = this.initColorWheel.bind(this);\n\t    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this);\n\t    this.el.updateColor = this.updateColor.bind(this);\n\t    this.el.onHueDown = this.onHueDown.bind(this);\n\t    this.el.onBrightnessDown = this.onBrightnessDown.bind(this);\n\t    this.el.refreshRaycaster = this.refreshRaycaster.bind(this);\n\t  },\n\t\n\t  refreshRaycaster: function refreshRaycaster() {\n\t    var raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]');\n\t    raycasterEl.components.raycaster.refreshObjects();\n\t  },\n\t\n\t  initBrightnessSlider: function initBrightnessSlider() {\n\t    /*\n\t     * NOTE:\n\t     *\n\t     * In A-Painter, the brightness slider is actually a model submesh / element.\n\t     * Here we generate it using glsl here and add it to our plane material\n\t     */\n\t\n\t    var vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\\n        gl_FragColor = color;\\n      }\\n    ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        color1: {\n\t          type: 'c',\n\t          value: new THREE.Color(0xFFFFFF)\n\t        },\n\t        color2: {\n\t          type: 'c',\n\t          value: new THREE.Color(0x000000)\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    this.brightnessSlider.getObject3D('mesh').material = material;\n\t    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\t  },\n\t  initColorWheel: function initColorWheel() {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t    var vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        brightness: {\n\t          type: 'f',\n\t          value: this.hsv.v\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    colorWheel.material = material;\n\t    colorWheel.material.needsUpdate = true;\n\t  },\n\t  onBrightnessDown: function onBrightnessDown(position) {\n\t    var brightnessSlider = this.brightnessSlider.getObject3D('mesh');\n\t    var brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t\n\t    brightnessSlider.updateMatrixWorld();\n\t    brightnessSlider.worldToLocal(position);\n\t\n\t    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n\t    var cursorOffset = position.y + this.brightnessSliderHeight / 2;\n\t    var brightness = cursorOffset / this.brightnessSliderHeight;\n\t    var updatedPosition = {\n\t      x: 0,\n\t      y: position.y - this.brightnessSliderHeight / 2,\n\t      z: 0\n\t\n\t      //Set brightness cursor position to offset position\n\t      // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n\t    };this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition);\n\t\n\t    //Update material brightness\n\t    colorWheel.material.uniforms['brightness'].value = brightness;\n\t    this.hsv.v = brightness;\n\t    this.el.updateColor();\n\t  },\n\t  onHueDown: function onHueDown(position) {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        radius = this.data.wheelSize;\n\t\n\t    colorWheel.updateMatrixWorld();\n\t    colorWheel.worldToLocal(position);\n\t\n\t    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n\t    this.setPositionTween(colorCursor, colorCursor.position, position);\n\t\n\t    //Determine Hue and Saturation value from polar co-ordinates\n\t    var polarPosition = {\n\t      r: Math.sqrt(position.x * position.x + position.y * position.y),\n\t      theta: Math.PI + Math.atan2(position.y, position.x)\n\t    };\n\t\n\t    var angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\n\t    this.hsv.h = angle / 360;\n\t    this.hsv.s = polarPosition.r / radius;\n\t\n\t    this.el.updateColor();\n\t  },\n\t\n\t  updateColor: function updateColor() {\n\t    var rgb = this.hsvToRgb(this.hsv);\n\t    var color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\t\n\t    var selectionEl = this.selectionEl.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t\n\t    //Update indicator element of selected color\n\t    if (this.data.showSelection) {\n\t      //Uncomment for no tweens: selectionEl.material.color.set(color)\n\t      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color));\n\t      selectionEl.material.needsUpdate = true;\n\t    }\n\t\n\t    //Change cursor colors based on brightness\n\t    if (this.hsv.v >= 0.5) {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000));\n\t    } else {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF));\n\t    }\n\t\n\t    //Notify listeners the color has changed.\n\t    Event.emit(this.el, 'changecolor', {\n\t      style: color,\n\t      rgb: rgb,\n\t      hsv: this.hsv\n\t    });\n\t    Event.emit(document.body, 'didchangecolor', {\n\t      style: color,\n\t      rgb: rgb,\n\t      hsv: this.hsv\n\t    });\n\t  },\n\t  hsvToRgb: function hsvToRgb(hsv) {\n\t    var r, g, b, i, f, p, q, t;\n\t    var h = THREE.Math.clamp(hsv.h, 0, 1);\n\t    var s = THREE.Math.clamp(hsv.s, 0, 1);\n\t    var v = hsv.v;\n\t\n\t    i = Math.floor(h * 6);\n\t    f = h * 6 - i;\n\t    p = v * (1 - s);\n\t    q = v * (1 - f * s);\n\t    t = v * (1 - (1 - f) * s);\n\t    switch (i % 6) {\n\t      case 0:\n\t        r = v;\n\t        g = t;\n\t        b = p;\n\t        break;\n\t      case 1:\n\t        r = q;\n\t        g = v;\n\t        b = p;\n\t        break;\n\t      case 2:\n\t        r = p;\n\t        g = v;\n\t        b = t;\n\t        break;\n\t      case 3:\n\t        r = p;\n\t        g = q;\n\t        b = v;\n\t        break;\n\t      case 4:\n\t        r = t;\n\t        g = p;\n\t        b = v;\n\t        break;\n\t      case 5:\n\t        r = v;\n\t        g = p;\n\t        b = q;\n\t        break;\n\t    }\n\t    return {\n\t      r: Math.round(r * 255),\n\t      g: Math.round(g * 255),\n\t      b: Math.round(b * 255)\n\t    };\n\t  },\n\t  update: function update(oldData) {\n\t    this.background.setAttribute('color', this.data.backgroundColor);\n\t  },\n\t  tick: function tick() {},\n\t  remove: function remove() {},\n\t  pause: function pause() {},\n\t  play: function play() {}\n\t});\n\t\n\tAFRAME.registerPrimitive('a-colorwheel', {\n\t  defaultComponents: {\n\t    colorwheel: {}\n\t  },\n\t  mappings: {\n\t    value: 'colorwheel.value',\n\t    name: 'colorwheel.name',\n\t    disabled: 'colorwheel.disabled',\n\t    color: 'colorwheel.color',\n\t    backgroundcolor: 'colorwheel.backgroundColor',\n\t    showselection: 'colorwheel.showSelection',\n\t    wheelsize: 'colorwheel.wheelSize',\n\t    selectionsize: 'colorwheel.selectionSize'\n\t  }\n\t});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  emit: function emit(el, name, data) {\n\t    el.dispatchEvent(new CustomEvent(name, { detail: data }));\n\t  }\n\t};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// aframe-colorwheel-component.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e9e9f699e2d1c0a9ac54","/**\n * A-FRAME Material\n * @author Etienne Pinchon epinchon@student.42.us.org\n *\n * Colorwheel for A-FRAME Material\n * @author Mo Kargas (DEVLAD) mo@devlad.com\n */\n\nconst Event = require('./src/utils')\n\nAFRAME.registerComponent('colorwheel', {\n  dependencies: ['raycaster'],\n  tweenDuration: 280,\n  tweenEasing: TWEEN.Easing.Cubic.Out,\n  padding: 0.15,\n  hsv: {\n    h: 0.0,\n    s: 0.0,\n    v: 1.0\n  },\n  color: '#ffffff',\n  schema: {\n    value: {\n      type: 'string',\n      default: ''\n    },\n    name: {\n      type: 'string',\n      default: ''\n    },\n    disabled: {\n      type: 'boolean',\n      default: false\n    },\n    color: {\n      type: 'color',\n      default: '#000'\n    },\n    backgroundColor: {\n      type: 'color',\n      default: '#FFF'\n    },\n    //Size of the colorWheel. NOTE: Assumed in metres.\n    wheelSize: {\n      type: 'number',\n      default: 0.4\n    },\n    //Show color choice in an element\n    showSelection: {\n      type: 'boolean',\n      default: true\n    },\n    selectionSize: {\n      type: 'number',\n      default: 0.10\n    }\n  },\n  //Util to animate between positions. Item represents a mesh or object containing a position\n  setPositionTween: function(item, fromPosition, toPosition) {\n    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function() {\n      item.position.x = this.x\n      item.position.y = this.y\n      item.position.z = this.z\n    }).easing(this.tweenEasing).start()\n  },\n  //Util to animate between colors. Item represents a mesh or object's material\n  setColorTween: function(item, fromColor, toColor) {\n    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function() {\n      item.color.r = this.r\n      item.color.g = this.g\n      item.color.b = this.b\n    }).easing(this.tweenEasing).start()\n  },\n  init: function() {\n    const that = this,\n      padding = this.padding,\n      defaultMaterial = {\n        color: '#ffffff',\n        flatShading: true,\n        transparent: true,\n        fog: false,\n        side: 'double'\n      }\n\n    //Background color of this interface\n    //TODO: Expose sizing for deeper customisation?\n    this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2\n\n    //Check if we have the a-rounded component\n    if(AFRAME.components.hasOwnProperty('rounded')){\n      this.background = document.createElement('a-rounded')\n      this.background.setAttribute('radius', 0.02)\n    } else {\n      this.background = document.createElement('a-entity')\n    }\n    console.debug(this.background)\n    this.background.setAttribute('width', this.backgroundWidth + 2 * padding)\n    this.background.setAttribute('height', this.backgroundHeight + 2 * padding)\n    this.background.setAttribute('position', {\n      x: -(this.data.wheelSize + padding),\n      y: -(this.data.wheelSize + padding),\n      z: -0.001\n    })\n    this.background.setAttribute('side', 'double')\n    this.el.appendChild(this.background)\n\n    //Circle for colorwheel\n    this.colorWheel = document.createElement('a-circle')\n    this.colorWheel.setAttribute('radius', this.data.wheelSize)\n    this.colorWheel.setAttribute('material', defaultMaterial)\n    this.colorWheel.setAttribute('position', {\n      x: 0,\n      y: 0,\n      z: 0\n    })\n    this.el.appendChild(this.colorWheel)\n\n    //Plane for the brightness slider\n    //TODO: Expose height and width for customisation?\n    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2\n    this.brightnessSliderWidth = 0.10\n\n    this.brightnessSlider = document.createElement('a-plane')\n    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth)\n    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight)\n    this.brightnessSlider.setAttribute('material', defaultMaterial)\n    this.brightnessSlider.setAttribute('position', {\n      x: this.data.wheelSize + this.brightnessSliderWidth,\n      y: 0,\n      z: 0\n    })\n    this.el.appendChild(this.brightnessSlider)\n\n    //Plane the color selection element will inhabit\n    if (this.data.showSelection) {\n      this.selectionEl = document.createElement('a-circle')\n      this.selectionEl.setAttribute('radius', this.data.selectionSize)\n      this.selectionEl.setAttribute('material', defaultMaterial)\n\n      //Place in top left, lift slightly\n      this.selectionEl.setAttribute('position', {\n        x: -this.data.wheelSize,\n        y: this.data.wheelSize,\n        z: 0.001\n      })\n      this.el.appendChild(this.selectionEl)\n    }\n\n    //Color 'cursor'. We'll use this to indicate a rough color selection\n    this.colorCursorOptions = {\n      cursorRadius: 0.025,\n      cursorSegments: 32,\n      cursorColor: new THREE.Color(0x000000)\n    }\n    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n      color: this.colorCursorOptions.cursorColor,\n      transparent: true\n    });\n\n    this.colorCursor = document.createElement('a-entity')\n    this.brightnessCursor = document.createElement('a-entity')\n\n    let geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4)\n    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\n    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\n\n    this.el.appendChild(this.colorCursor)\n    this.brightnessSlider.appendChild(this.brightnessCursor)\n    this.brightnessCursor.setAttribute('position', {\n      x: 0,\n      y: this.brightnessSliderHeight / 2,\n      z: 0\n    })\n\n    //Handlers\n    this.bindMethods()\n\n    setTimeout(() => {\n\n      that.el.initColorWheel()\n      that.el.initBrightnessSlider()\n      that.el.refreshRaycaster()\n\n      that.colorWheel.addEventListener('click', function(evt) {\n        if (that.data.disabled) return;\n        that.el.onHueDown(evt.detail.intersection.point)\n      });\n\n      that.brightnessSlider.addEventListener('click', function(evt) {\n        if (that.data.disabled) return;\n        that.el.onBrightnessDown(evt.detail.intersection.point)\n      });\n\n    }, 5)\n  },\n\n  bindMethods: function() {\n    this.el.initColorWheel = this.initColorWheel.bind(this)\n    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this)\n    this.el.updateColor = this.updateColor.bind(this)\n    this.el.onHueDown = this.onHueDown.bind(this)\n    this.el.onBrightnessDown = this.onBrightnessDown.bind(this)\n    this.el.refreshRaycaster = this.refreshRaycaster.bind(this)\n  },\n\n  refreshRaycaster: function() {\n    const raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]')\n    raycasterEl.components.raycaster.refreshObjects()\n  },\n\n  initBrightnessSlider: function() {\n    /*\n     * NOTE:\n     *\n     * In A-Painter, the brightness slider is actually a model submesh / element.\n     * Here we generate it using glsl here and add it to our plane material\n     */\n\n    const vertexShader = `\n      varying vec2 vUv;\n      void main(){\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n      }\n    `\n\n    const fragmentShader = `\n      uniform vec3 color1;\n      uniform vec3 color2;\n      varying vec2 vUv;\n\n      void main(){\n        vec4 c1 = vec4(color1, 1.0);\n  \t    vec4 c2 = vec4(color2, 1.0);\n\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\n        gl_FragColor = color;\n      }\n    `\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        color1: {\n          type: 'c',\n          value: new THREE.Color(0xFFFFFF)\n        },\n        color2: {\n          type: 'c',\n          value: new THREE.Color(0x000000)\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    })\n\n    this.brightnessSlider.getObject3D('mesh').material = material;\n    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\n  },\n  initColorWheel: function() {\n    let colorWheel = this.colorWheel.getObject3D('mesh')\n    const vertexShader = `\n\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix * mvPosition;\n      }\n    `;\n\n    const fragmentShader = `\n      #define M_PI2 6.28318530718\n      uniform float brightness;\n      varying vec2 vUv;\n      vec3 hsb2rgb(in vec3 c){\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n          return c.z * mix( vec3(1.0), rgb, c.y);\n      }\n\n      void main() {\n        vec2 toCenter = vec2(0.5) - vUv;\n        float angle = atan(toCenter.y, toCenter.x);\n        float radius = length(toCenter) * 2.0;\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\n        gl_FragColor = vec4(color, 1.0);\n      }\n      `;\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        brightness: {\n          type: 'f',\n          value: this.hsv.v\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    });\n\n    colorWheel.material = material\n    colorWheel.material.needsUpdate = true\n  },\n  onBrightnessDown: function(position) {\n    const brightnessSlider = this.brightnessSlider.getObject3D('mesh')\n    const brightnessCursor = this.brightnessCursor.getObject3D('mesh')\n    const colorWheel = this.colorWheel.getObject3D('mesh')\n\n    brightnessSlider.updateMatrixWorld()\n    brightnessSlider.worldToLocal(position)\n\n    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n    let cursorOffset = position.y + this.brightnessSliderHeight / 2\n    let brightness = cursorOffset / this.brightnessSliderHeight\n    let updatedPosition = {\n      x: 0,\n      y: position.y - this.brightnessSliderHeight / 2,\n      z: 0\n    }\n\n    //Set brightness cursor position to offset position\n    // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n    this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition)\n\n    //Update material brightness\n    colorWheel.material.uniforms['brightness'].value = brightness\n    this.hsv.v = brightness\n    this.el.updateColor()\n  },\n  onHueDown: function(position) {\n    const colorWheel = this.colorWheel.getObject3D('mesh'),\n      colorCursor = this.colorCursor.getObject3D('mesh'),\n      radius = this.data.wheelSize\n\n    colorWheel.updateMatrixWorld()\n    colorWheel.worldToLocal(position)\n\n    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n    this.setPositionTween(colorCursor, colorCursor.position, position)\n\n    //Determine Hue and Saturation value from polar co-ordinates\n    let polarPosition = {\n      r: Math.sqrt(position.x * position.x + position.y * position.y),\n      theta: Math.PI + Math.atan2(position.y, position.x)\n    }\n\n    let angle = ((polarPosition.theta * (180 / Math.PI)) + 180) % 360\n    this.hsv.h = angle / 360\n    this.hsv.s = polarPosition.r / radius\n\n    this.el.updateColor()\n  },\n\n  updateColor: function() {\n    let rgb = this.hsvToRgb(this.hsv)\n    let color = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n\n    const selectionEl = this.selectionEl.getObject3D('mesh'),\n      colorCursor = this.colorCursor.getObject3D('mesh'),\n      brightnessCursor = this.brightnessCursor.getObject3D('mesh')\n\n\n    //Update indicator element of selected color\n    if (this.data.showSelection) {\n      //Uncomment for no tweens: selectionEl.material.color.set(color)\n      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color))\n      selectionEl.material.needsUpdate = true\n    }\n\n    //Change cursor colors based on brightness\n    if(this.hsv.v >= 0.5){\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000))\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000))\n    } else {\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF))\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF))\n\n    }\n\n    //Notify listeners the color has changed.\n    Event.emit(this.el, 'changecolor', {\n      style: color,\n      rgb: rgb,\n      hsv: this.hsv\n    })\n    Event.emit(document.body, 'didchangecolor', {\n      style: color,\n      rgb: rgb,\n      hsv: this.hsv\n    })\n\n  },\n  hsvToRgb: function(hsv) {\n    var r, g, b, i, f, p, q, t;\n    var h = THREE.Math.clamp(hsv.h, 0, 1);\n    var s = THREE.Math.clamp(hsv.s, 0, 1);\n    var v = hsv.v;\n\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    return {\n      r: Math.round(r * 255),\n      g: Math.round(g * 255),\n      b: Math.round(b * 255)\n    };\n  },\n  update: function(oldData) {\n    this.background.setAttribute('color', this.data.backgroundColor)\n  },\n  tick: function() {},\n  remove: function() {},\n  pause: function() {},\n  play: function() {}\n});\n\nAFRAME.registerPrimitive('a-colorwheel', {\n  defaultComponents: {\n    colorwheel: {}\n  },\n  mappings: {\n    value: 'colorwheel.value',\n    name: 'colorwheel.name',\n    disabled: 'colorwheel.disabled',\n    color: 'colorwheel.color',\n    backgroundcolor: 'colorwheel.backgroundColor',\n    showselection: 'colorwheel.showSelection',\n    wheelsize: 'colorwheel.wheelSize',\n    selectionsize: 'colorwheel.selectionSize'\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = {\n  emit: (el, name, data)=> {\n    el.dispatchEvent( new CustomEvent(name, {detail: data}) );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}