{"version":3,"sources":["webpack:///aframe-colorwheel-component.js","webpack:///webpack/bootstrap 57ed5bd47cb3d986abbd","webpack:///./index.js","webpack:///./dist/aframe-colorwheel-component.min.js","webpack:///./src/utils.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Event","AFRAME","registerComponent","dependencies","tweenDuration","tweenEasing","TWEEN","Easing","Cubic","Out","padding","hsv","h","s","v","color","schema","disabled","type","default","backgroundColor","wheelSize","showSelection","selectionSize","setPositionTween","item","fromPosition","toPosition","this","tween","Tween","to","onUpdate","position","x","y","z","easing","start","setColorTween","fromColor","toColor","THREE","Color","r","g","b","init","that","defaultMaterial","flatShading","transparent","fog","side","backgroundWidth","backgroundHeight","data","components","hasOwnProperty","background","document","createElement","setAttribute","el","appendChild","colorWheel","brightnessSliderHeight","brightnessSliderWidth","brightnessSlider","selectionEl","colorCursorOptions","cursorRadius","cursorSegments","cursorColor","cursorMaterial","MeshBasicMaterial","colorCursor","brightnessCursor","geometry","TorusBufferGeometry","setObject3D","Mesh","bindMethods","setTimeout","initColorWheel","initBrightnessSlider","refreshRaycaster","addEventListener","evt","onHueDown","detail","intersection","point","onBrightnessDown","bind","updateColor","raycasterEl","scenes","querySelector","raycaster","refreshObjects","vertexShader","fragmentShader","material","ShaderMaterial","uniforms","color1","value","color2","getObject3D","needsUpdate","brightness","updateMatrixWorld","worldToLocal","cursorOffset","updatedPosition","radius","polarPosition","Math","sqrt","theta","PI","atan2","angle","rgb","hsvToRgb","emit","style","body","i","f","q","t","clamp","floor","round","update","oldData","tick","remove","pause","play","registerPrimitive","defaultComponents","colorwheel","mappings","backgroundcolor","showselection","wheelsize","selectionsize","e","o","name","console","debug","n","l","a","d","dispatchEvent","CustomEvent"],"mappings":"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","file":"aframe-colorwheel-component.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Colorwheel for A-FRAME Material\n\t * @author Mo Kargas (DEVLAD) mo@devlad.com\n\t */\n\t\n\tvar Event = __webpack_require__(3);\n\t\n\tAFRAME.registerComponent('colorwheel', {\n\t  dependencies: ['raycaster'],\n\t  tweenDuration: 280,\n\t  tweenEasing: TWEEN.Easing.Cubic.Out,\n\t  padding: 0.15,\n\t  hsv: {\n\t    h: 0.0,\n\t    s: 0.0,\n\t    v: 1.0\n\t  },\n\t  color: '#ffffff',\n\t  schema: {\n\t    disabled: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t    backgroundColor: {\n\t      type: 'color',\n\t      default: '#FFF'\n\t    },\n\t    //Size of the colorWheel. NOTE: Assumed in metres.\n\t    wheelSize: {\n\t      type: 'number',\n\t      default: 0.4\n\t    },\n\t    //Show color choice in an element\n\t    showSelection: {\n\t      type: 'boolean',\n\t      default: true\n\t    },\n\t    selectionSize: {\n\t      type: 'number',\n\t      default: 0.10\n\t    }\n\t  },\n\t  //Util to animate between positions. Item represents a mesh or object containing a position\n\t  setPositionTween: function setPositionTween(item, fromPosition, toPosition) {\n\t    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function () {\n\t      item.position.x = this.x;\n\t      item.position.y = this.y;\n\t      item.position.z = this.z;\n\t    }).easing(this.tweenEasing).start();\n\t  },\n\t  //Util to animate between colors. Item represents a mesh or object's material\n\t  setColorTween: function setColorTween(item, fromColor, toColor) {\n\t    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function () {\n\t      item.color.r = this.r;\n\t      item.color.g = this.g;\n\t      item.color.b = this.b;\n\t    }).easing(this.tweenEasing).start();\n\t  },\n\t  init: function init() {\n\t    var that = this,\n\t        padding = this.padding,\n\t        defaultMaterial = {\n\t      color: '#ffffff',\n\t      flatShading: true,\n\t      transparent: true,\n\t      fog: false,\n\t      side: 'double'\n\t\n\t      //Background color of this interface\n\t      //TODO: Expose sizing for deeper customisation?\n\t    };this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2;\n\t\n\t    //Check if we have the a-rounded component\n\t    if (AFRAME.components.hasOwnProperty('rounded')) {\n\t      this.background = document.createElement('a-rounded');\n\t      this.background.setAttribute('radius', 0.02);\n\t      this.background.setAttribute('position', {\n\t        x: -(this.data.wheelSize + padding),\n\t        y: -(this.data.wheelSize + padding),\n\t        z: -0.001\n\t      });\n\t    } else {\n\t      this.background = document.createElement('a-plane');\n\t      this.background.setAttribute('position', {\n\t        x: 0,\n\t        y: 0,\n\t        z: -0.001\n\t      });\n\t    }\n\t    this.background.setAttribute('width', this.backgroundWidth + 2 * padding);\n\t    this.background.setAttribute('height', this.backgroundHeight + 2 * padding);\n\t    this.background.setAttribute('material', 'shader', 'flat');\n\t    this.background.setAttribute('side', 'double');\n\t    this.el.appendChild(this.background);\n\t\n\t    //Circle for colorwheel\n\t    this.colorWheel = document.createElement('a-circle');\n\t    this.colorWheel.setAttribute('radius', this.data.wheelSize);\n\t    this.colorWheel.setAttribute('material', defaultMaterial);\n\t    this.colorWheel.setAttribute('position', {\n\t      x: 0,\n\t      y: 0,\n\t      z: 0\n\t    });\n\t    this.el.appendChild(this.colorWheel);\n\t\n\t    //Plane for the brightness slider\n\t    //TODO: Expose height and width for customisation?\n\t    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2;\n\t    this.brightnessSliderWidth = 0.10;\n\t\n\t    this.brightnessSlider = document.createElement('a-plane');\n\t    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth);\n\t    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight);\n\t    this.brightnessSlider.setAttribute('material', defaultMaterial);\n\t    this.brightnessSlider.setAttribute('position', {\n\t      x: this.data.wheelSize + this.brightnessSliderWidth,\n\t      y: 0,\n\t      z: 0\n\t    });\n\t    this.el.appendChild(this.brightnessSlider);\n\t\n\t    //Plane the color selection element will inhabit\n\t    if (this.data.showSelection) {\n\t      this.selectionEl = document.createElement('a-circle');\n\t      this.selectionEl.setAttribute('radius', this.data.selectionSize);\n\t      this.selectionEl.setAttribute('material', defaultMaterial);\n\t\n\t      //Place in top left, lift slightly\n\t      this.selectionEl.setAttribute('position', {\n\t        x: -this.data.wheelSize,\n\t        y: this.data.wheelSize,\n\t        z: 0.001\n\t      });\n\t      this.el.appendChild(this.selectionEl);\n\t    }\n\t\n\t    //Color 'cursor'. We'll use this to indicate a rough color selection\n\t    this.colorCursorOptions = {\n\t      cursorRadius: 0.025,\n\t      cursorSegments: 32,\n\t      cursorColor: new THREE.Color(0x000000)\n\t    };\n\t    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n\t      color: this.colorCursorOptions.cursorColor,\n\t      transparent: true\n\t    });\n\t\n\t    this.colorCursor = document.createElement('a-entity');\n\t    this.brightnessCursor = document.createElement('a-entity');\n\t\n\t    var geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4);\n\t    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t\n\t    this.el.appendChild(this.colorCursor);\n\t    this.brightnessSlider.appendChild(this.brightnessCursor);\n\t    this.brightnessCursor.setAttribute('position', {\n\t      x: 0,\n\t      y: this.brightnessSliderHeight / 2,\n\t      z: 0\n\t    });\n\t\n\t    //Handlers\n\t    this.bindMethods();\n\t\n\t    setTimeout(function () {\n\t\n\t      that.el.initColorWheel();\n\t      that.el.initBrightnessSlider();\n\t      that.el.refreshRaycaster();\n\t\n\t      that.colorWheel.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onHueDown(evt.detail.intersection.point);\n\t      });\n\t\n\t      that.brightnessSlider.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onBrightnessDown(evt.detail.intersection.point);\n\t      });\n\t    }, 5);\n\t  },\n\t\n\t  bindMethods: function bindMethods() {\n\t    this.el.initColorWheel = this.initColorWheel.bind(this);\n\t    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this);\n\t    this.el.updateColor = this.updateColor.bind(this);\n\t    this.el.onHueDown = this.onHueDown.bind(this);\n\t    this.el.onBrightnessDown = this.onBrightnessDown.bind(this);\n\t    this.el.refreshRaycaster = this.refreshRaycaster.bind(this);\n\t  },\n\t\n\t  refreshRaycaster: function refreshRaycaster() {\n\t    var raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]');\n\t    raycasterEl.components.raycaster.refreshObjects();\n\t  },\n\t\n\t  initBrightnessSlider: function initBrightnessSlider() {\n\t    /*\n\t     * NOTE:\n\t     *\n\t     * In A-Painter, the brightness slider is actually a model submesh / element.\n\t     * Here we generate it using glsl here and add it to our plane material\n\t     */\n\t\n\t    var vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\\n        gl_FragColor = color;\\n      }\\n    ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        color1: {\n\t          type: 'c',\n\t          value: new THREE.Color(0xFFFFFF)\n\t        },\n\t        color2: {\n\t          type: 'c',\n\t          value: new THREE.Color(0x000000)\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    this.brightnessSlider.getObject3D('mesh').material = material;\n\t    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\t  },\n\t  initColorWheel: function initColorWheel() {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t    var vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        brightness: {\n\t          type: 'f',\n\t          value: this.hsv.v\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    colorWheel.material = material;\n\t    colorWheel.material.needsUpdate = true;\n\t  },\n\t  onBrightnessDown: function onBrightnessDown(position) {\n\t    var brightnessSlider = this.brightnessSlider.getObject3D('mesh');\n\t    var brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t\n\t    brightnessSlider.updateMatrixWorld();\n\t    brightnessSlider.worldToLocal(position);\n\t\n\t    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n\t    var cursorOffset = position.y + this.brightnessSliderHeight / 2;\n\t    var brightness = cursorOffset / this.brightnessSliderHeight;\n\t    var updatedPosition = {\n\t      x: 0,\n\t      y: position.y - this.brightnessSliderHeight / 2,\n\t      z: 0\n\t\n\t      //Set brightness cursor position to offset position\n\t      // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n\t    };this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition);\n\t\n\t    //Update material brightness\n\t    colorWheel.material.uniforms['brightness'].value = brightness;\n\t    this.hsv.v = brightness;\n\t    this.el.updateColor();\n\t  },\n\t  onHueDown: function onHueDown(position) {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        radius = this.data.wheelSize;\n\t\n\t    colorWheel.updateMatrixWorld();\n\t    colorWheel.worldToLocal(position);\n\t\n\t    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n\t    this.setPositionTween(colorCursor, colorCursor.position, position);\n\t\n\t    //Determine Hue and Saturation value from polar co-ordinates\n\t    var polarPosition = {\n\t      r: Math.sqrt(position.x * position.x + position.y * position.y),\n\t      theta: Math.PI + Math.atan2(position.y, position.x)\n\t    };\n\t\n\t    var angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\n\t    this.hsv.h = angle / 360;\n\t    this.hsv.s = polarPosition.r / radius;\n\t\n\t    this.el.updateColor();\n\t  },\n\t\n\t  updateColor: function updateColor() {\n\t    var rgb = this.hsvToRgb(this.hsv);\n\t    var color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\t\n\t    var selectionEl = this.selectionEl.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t\n\t    //Update indicator element of selected color\n\t    if (this.data.showSelection) {\n\t      //Uncomment for no tweens: selectionEl.material.color.set(color)\n\t      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color));\n\t      selectionEl.material.needsUpdate = true;\n\t    }\n\t\n\t    //Change cursor colors based on brightness\n\t    if (this.hsv.v >= 0.5) {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000));\n\t    } else {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF));\n\t    }\n\t\n\t    //Notify listeners the color has changed.\n\t    Event.emit(this.el, 'changecolor', {\n\t      style: color,\n\t      rgb: rgb,\n\t      hsv: this.hsv\n\t    });\n\t    Event.emit(document.body, 'didchangecolor', {\n\t      style: color,\n\t      rgb: rgb,\n\t      hsv: this.hsv\n\t    });\n\t  },\n\t  hsvToRgb: function hsvToRgb(hsv) {\n\t    var r, g, b, i, f, p, q, t;\n\t    var h = THREE.Math.clamp(hsv.h, 0, 1);\n\t    var s = THREE.Math.clamp(hsv.s, 0, 1);\n\t    var v = hsv.v;\n\t\n\t    i = Math.floor(h * 6);\n\t    f = h * 6 - i;\n\t    p = v * (1 - s);\n\t    q = v * (1 - f * s);\n\t    t = v * (1 - (1 - f) * s);\n\t    switch (i % 6) {\n\t      case 0:\n\t        r = v;\n\t        g = t;\n\t        b = p;\n\t        break;\n\t      case 1:\n\t        r = q;\n\t        g = v;\n\t        b = p;\n\t        break;\n\t      case 2:\n\t        r = p;\n\t        g = v;\n\t        b = t;\n\t        break;\n\t      case 3:\n\t        r = p;\n\t        g = q;\n\t        b = v;\n\t        break;\n\t      case 4:\n\t        r = t;\n\t        g = p;\n\t        b = v;\n\t        break;\n\t      case 5:\n\t        r = v;\n\t        g = p;\n\t        b = q;\n\t        break;\n\t    }\n\t    return {\n\t      r: Math.round(r * 255),\n\t      g: Math.round(g * 255),\n\t      b: Math.round(b * 255)\n\t    };\n\t  },\n\t  update: function update(oldData) {\n\t    this.background.setAttribute('color', this.data.backgroundColor);\n\t  },\n\t  tick: function tick() {},\n\t  remove: function remove() {},\n\t  pause: function pause() {},\n\t  play: function play() {}\n\t});\n\t\n\tAFRAME.registerPrimitive('a-colorwheel', {\n\t  defaultComponents: {\n\t    colorwheel: {}\n\t  },\n\t  mappings: {\n\t    disabled: 'colorwheel.disabled',\n\t    backgroundcolor: 'colorwheel.backgroundColor',\n\t    showselection: 'colorwheel.showSelection',\n\t    wheelsize: 'colorwheel.wheelSize',\n\t    selectionsize: 'colorwheel.selectionSize'\n\t  }\n\t});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t!function (e) {\n\t  function t(s) {\n\t    if (i[s]) return i[s].exports;var o = i[s] = { exports: {}, id: s, loaded: !1 };return e[s].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;\n\t  }var i = {};return t.m = e, t.c = i, t.p = \"\", t(0);\n\t}([function (e, t, i) {\n\t  \"use strict\";\n\t  var s = i(1);AFRAME.registerComponent(\"colorwheel\", { dependencies: [\"raycaster\"], tweenDuration: 280, tweenEasing: TWEEN.Easing.Cubic.Out, padding: .15, hsv: { h: 0, s: 0, v: 1 }, color: \"#ffffff\", schema: { value: { type: \"string\", default: \"\" }, name: { type: \"string\", default: \"\" }, disabled: { type: \"boolean\", default: !1 }, color: { type: \"color\", default: \"#000\" }, backgroundColor: { type: \"color\", default: \"#FFF\" }, wheelSize: { type: \"number\", default: .4 }, showSelection: { type: \"boolean\", default: !0 }, selectionSize: { type: \"number\", default: .1 } }, setPositionTween: function setPositionTween(e, t, i) {\n\t      this.tween = new TWEEN.Tween(t).to(i, this.tweenDuration).onUpdate(function () {\n\t        e.position.x = this.x, e.position.y = this.y, e.position.z = this.z;\n\t      }).easing(this.tweenEasing).start();\n\t    }, setColorTween: function setColorTween(e, t, i) {\n\t      this.tween = new TWEEN.Tween(new THREE.Color(t)).to(i, this.tweenDuration).onUpdate(function () {\n\t        e.color.r = this.r, e.color.g = this.g, e.color.b = this.b;\n\t      }).easing(this.tweenEasing).start();\n\t    }, init: function init() {\n\t      var e = this,\n\t          t = this.padding,\n\t          i = { color: \"#ffffff\", flatShading: !0, transparent: !0, fog: !1, side: \"double\" };this.backgroundWidth = this.backgroundHeight = 2 * this.data.wheelSize, AFRAME.components.hasOwnProperty(\"rounded\") ? (this.background = document.createElement(\"a-rounded\"), this.background.setAttribute(\"radius\", .02)) : this.background = document.createElement(\"a-entity\"), console.debug(this.background), this.background.setAttribute(\"width\", this.backgroundWidth + 2 * t), this.background.setAttribute(\"height\", this.backgroundHeight + 2 * t), this.background.setAttribute(\"position\", { x: -(this.data.wheelSize + t), y: -(this.data.wheelSize + t), z: -.001 }), this.background.setAttribute(\"side\", \"double\"), this.el.appendChild(this.background), this.colorWheel = document.createElement(\"a-circle\"), this.colorWheel.setAttribute(\"radius\", this.data.wheelSize), this.colorWheel.setAttribute(\"material\", i), this.colorWheel.setAttribute(\"position\", { x: 0, y: 0, z: 0 }), this.el.appendChild(this.colorWheel), this.brightnessSliderHeight = 2 * (this.data.wheelSize + t), this.brightnessSliderWidth = .1, this.brightnessSlider = document.createElement(\"a-plane\"), this.brightnessSlider.setAttribute(\"width\", this.brightnessSliderWidth), this.brightnessSlider.setAttribute(\"height\", this.brightnessSliderHeight), this.brightnessSlider.setAttribute(\"material\", i), this.brightnessSlider.setAttribute(\"position\", { x: this.data.wheelSize + this.brightnessSliderWidth, y: 0, z: 0 }), this.el.appendChild(this.brightnessSlider), this.data.showSelection && (this.selectionEl = document.createElement(\"a-circle\"), this.selectionEl.setAttribute(\"radius\", this.data.selectionSize), this.selectionEl.setAttribute(\"material\", i), this.selectionEl.setAttribute(\"position\", { x: -this.data.wheelSize, y: this.data.wheelSize, z: .001 }), this.el.appendChild(this.selectionEl)), this.colorCursorOptions = { cursorRadius: .025, cursorSegments: 32, cursorColor: new THREE.Color(0) }, this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({ color: this.colorCursorOptions.cursorColor, transparent: !0 }), this.colorCursor = document.createElement(\"a-entity\"), this.brightnessCursor = document.createElement(\"a-entity\");var s = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - .02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4);this.colorCursor.setObject3D(\"mesh\", new THREE.Mesh(s, this.colorCursorOptions.cursorMaterial)), this.brightnessCursor.setObject3D(\"mesh\", new THREE.Mesh(s, this.colorCursorOptions.cursorMaterial)), this.el.appendChild(this.colorCursor), this.brightnessSlider.appendChild(this.brightnessCursor), this.brightnessCursor.setAttribute(\"position\", { x: 0, y: this.brightnessSliderHeight / 2, z: 0 }), this.bindMethods(), setTimeout(function () {\n\t        e.el.initColorWheel(), e.el.initBrightnessSlider(), e.el.refreshRaycaster(), e.colorWheel.addEventListener(\"click\", function (t) {\n\t          e.data.disabled || e.el.onHueDown(t.detail.intersection.point);\n\t        }), e.brightnessSlider.addEventListener(\"click\", function (t) {\n\t          e.data.disabled || e.el.onBrightnessDown(t.detail.intersection.point);\n\t        });\n\t      }, 5);\n\t    }, bindMethods: function bindMethods() {\n\t      this.el.initColorWheel = this.initColorWheel.bind(this), this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this), this.el.updateColor = this.updateColor.bind(this), this.el.onHueDown = this.onHueDown.bind(this), this.el.onBrightnessDown = this.onBrightnessDown.bind(this), this.el.refreshRaycaster = this.refreshRaycaster.bind(this);\n\t    }, refreshRaycaster: function refreshRaycaster() {\n\t      var e = AFRAME.scenes[0].querySelector(\"[raycaster]\");e.components.raycaster.refreshObjects();\n\t    }, initBrightnessSlider: function initBrightnessSlider() {\n\t      var e = \"\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    \",\n\t          t = \"\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\\n        gl_FragColor = color;\\n      }\\n    \",\n\t          i = new THREE.ShaderMaterial({ uniforms: { color1: { type: \"c\", value: new THREE.Color(16777215) }, color2: { type: \"c\", value: new THREE.Color(0) } }, vertexShader: e, fragmentShader: t });this.brightnessSlider.getObject3D(\"mesh\").material = i, this.brightnessSlider.getObject3D(\"mesh\").material.needsUpdate = !0;\n\t    }, initColorWheel: function initColorWheel() {\n\t      var e = this.colorWheel.getObject3D(\"mesh\"),\n\t          t = \"\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    \",\n\t          i = \"\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      \",\n\t          s = new THREE.ShaderMaterial({ uniforms: { brightness: { type: \"f\", value: this.hsv.v } }, vertexShader: t, fragmentShader: i });e.material = s, e.material.needsUpdate = !0;\n\t    }, onBrightnessDown: function onBrightnessDown(e) {\n\t      var t = this.brightnessSlider.getObject3D(\"mesh\"),\n\t          i = this.brightnessCursor.getObject3D(\"mesh\"),\n\t          s = this.colorWheel.getObject3D(\"mesh\");t.updateMatrixWorld(), t.worldToLocal(e);var o = e.y + this.brightnessSliderHeight / 2,\n\t          r = o / this.brightnessSliderHeight,\n\t          n = { x: 0, y: e.y - this.brightnessSliderHeight / 2, z: 0 };this.setPositionTween(i, i.position, n), s.material.uniforms.brightness.value = r, this.hsv.v = r, this.el.updateColor();\n\t    }, onHueDown: function onHueDown(e) {\n\t      var t = this.colorWheel.getObject3D(\"mesh\"),\n\t          i = this.colorCursor.getObject3D(\"mesh\"),\n\t          s = this.data.wheelSize;t.updateMatrixWorld(), t.worldToLocal(e), this.setPositionTween(i, i.position, e);var o = { r: Math.sqrt(e.x * e.x + e.y * e.y), theta: Math.PI + Math.atan2(e.y, e.x) },\n\t          r = (o.theta * (180 / Math.PI) + 180) % 360;this.hsv.h = r / 360, this.hsv.s = o.r / s, this.el.updateColor();\n\t    }, updateColor: function updateColor() {\n\t      var e = this.hsvToRgb(this.hsv),\n\t          t = \"rgb(\" + e.r + \", \" + e.g + \", \" + e.b + \")\",\n\t          i = this.selectionEl.getObject3D(\"mesh\"),\n\t          o = this.colorCursor.getObject3D(\"mesh\"),\n\t          r = this.brightnessCursor.getObject3D(\"mesh\");this.data.showSelection && (this.setColorTween(i.material, i.material.color, new THREE.Color(t)), i.material.needsUpdate = !0), this.hsv.v >= .5 ? (this.setColorTween(o.material, o.material.color, new THREE.Color(0)), this.setColorTween(r.material, r.material.color, new THREE.Color(0))) : (this.setColorTween(o.material, o.material.color, new THREE.Color(16777215)), this.setColorTween(r.material, r.material.color, new THREE.Color(16777215))), s.emit(this.el, \"changecolor\", { style: t, rgb: e, hsv: this.hsv }), s.emit(document.body, \"didchangecolor\", { style: t, rgb: e, hsv: this.hsv });\n\t    }, hsvToRgb: function hsvToRgb(e) {\n\t      var t,\n\t          i,\n\t          s,\n\t          o,\n\t          r,\n\t          n,\n\t          h,\n\t          l,\n\t          a = THREE.Math.clamp(e.h, 0, 1),\n\t          c = THREE.Math.clamp(e.s, 0, 1),\n\t          d = e.v;switch (o = Math.floor(6 * a), r = 6 * a - o, n = d * (1 - c), h = d * (1 - r * c), l = d * (1 - (1 - r) * c), o % 6) {case 0:\n\t          t = d, i = l, s = n;break;case 1:\n\t          t = h, i = d, s = n;break;case 2:\n\t          t = n, i = d, s = l;break;case 3:\n\t          t = n, i = h, s = d;break;case 4:\n\t          t = l, i = n, s = d;break;case 5:\n\t          t = d, i = n, s = h;}return { r: Math.round(255 * t), g: Math.round(255 * i), b: Math.round(255 * s) };\n\t    }, update: function update(e) {\n\t      this.background.setAttribute(\"color\", this.data.backgroundColor);\n\t    }, tick: function tick() {}, remove: function remove() {}, pause: function pause() {}, play: function play() {} }), AFRAME.registerPrimitive(\"a-colorwheel\", { defaultComponents: { colorwheel: {} }, mappings: { value: \"colorwheel.value\", name: \"colorwheel.name\", disabled: \"colorwheel.disabled\", color: \"colorwheel.color\", backgroundcolor: \"colorwheel.backgroundColor\", showselection: \"colorwheel.showSelection\", wheelsize: \"colorwheel.wheelSize\", selectionsize: \"colorwheel.selectionSize\" } });\n\t}, function (e, t) {\n\t  \"use strict\";\n\t  e.exports = { emit: function emit(e, t, i) {\n\t      e.dispatchEvent(new CustomEvent(t, { detail: i }));\n\t    } };\n\t}]);\n\t//# sourceMappingURL=aframe-colorwheel-component.min.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  emit: function emit(el, name, data) {\n\t    el.dispatchEvent(new CustomEvent(name, { detail: data }));\n\t  }\n\t};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// aframe-colorwheel-component.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 57ed5bd47cb3d986abbd","/**\n * Colorwheel for A-FRAME Material\n * @author Mo Kargas (DEVLAD) mo@devlad.com\n */\n\nconst Event = require('./src/utils')\n\nAFRAME.registerComponent('colorwheel', {\n  dependencies: ['raycaster'],\n  tweenDuration: 280,\n  tweenEasing: TWEEN.Easing.Cubic.Out,\n  padding: 0.15,\n  hsv: {\n    h: 0.0,\n    s: 0.0,\n    v: 1.0\n  },\n  color: '#ffffff',\n  schema: {\n    disabled: {\n      type: 'boolean',\n      default: false\n    },\n    backgroundColor: {\n      type: 'color',\n      default: '#FFF'\n    },\n    //Size of the colorWheel. NOTE: Assumed in metres.\n    wheelSize: {\n      type: 'number',\n      default: 0.4\n    },\n    //Show color choice in an element\n    showSelection: {\n      type: 'boolean',\n      default: true\n    },\n    selectionSize: {\n      type: 'number',\n      default: 0.10\n    }\n  },\n  //Util to animate between positions. Item represents a mesh or object containing a position\n  setPositionTween: function(item, fromPosition, toPosition) {\n    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function() {\n      item.position.x = this.x\n      item.position.y = this.y\n      item.position.z = this.z\n    }).easing(this.tweenEasing).start()\n  },\n  //Util to animate between colors. Item represents a mesh or object's material\n  setColorTween: function(item, fromColor, toColor) {\n    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function() {\n      item.color.r = this.r\n      item.color.g = this.g\n      item.color.b = this.b\n    }).easing(this.tweenEasing).start()\n  },\n  init: function() {\n    const that = this,\n      padding = this.padding,\n      defaultMaterial = {\n        color: '#ffffff',\n        flatShading: true,\n        transparent: true,\n        fog: false,\n        side: 'double'\n      }\n\n    //Background color of this interface\n    //TODO: Expose sizing for deeper customisation?\n    this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2\n\n    //Check if we have the a-rounded component\n    if(AFRAME.components.hasOwnProperty('rounded')){\n      this.background = document.createElement('a-rounded')\n      this.background.setAttribute('radius', 0.02)\n      this.background.setAttribute('position', {\n        x: -(this.data.wheelSize + padding),\n        y: -(this.data.wheelSize + padding),\n        z: -0.001\n      })\n    } else {\n      this.background = document.createElement('a-plane')\n      this.background.setAttribute('position', {\n        x: 0,\n        y: 0,\n        z: -0.001\n      })\n    }\n    this.background.setAttribute('width', this.backgroundWidth + 2 * padding)\n    this.background.setAttribute('height', this.backgroundHeight + 2 * padding)\n    this.background.setAttribute('material', 'shader', 'flat')\n    this.background.setAttribute('side', 'double')\n    this.el.appendChild(this.background)\n\n    //Circle for colorwheel\n    this.colorWheel = document.createElement('a-circle')\n    this.colorWheel.setAttribute('radius', this.data.wheelSize)\n    this.colorWheel.setAttribute('material', defaultMaterial)\n    this.colorWheel.setAttribute('position', {\n      x: 0,\n      y: 0,\n      z: 0\n    })\n    this.el.appendChild(this.colorWheel)\n\n    //Plane for the brightness slider\n    //TODO: Expose height and width for customisation?\n    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2\n    this.brightnessSliderWidth = 0.10\n\n    this.brightnessSlider = document.createElement('a-plane')\n    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth)\n    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight)\n    this.brightnessSlider.setAttribute('material', defaultMaterial)\n    this.brightnessSlider.setAttribute('position', {\n      x: this.data.wheelSize + this.brightnessSliderWidth,\n      y: 0,\n      z: 0\n    })\n    this.el.appendChild(this.brightnessSlider)\n\n    //Plane the color selection element will inhabit\n    if (this.data.showSelection) {\n      this.selectionEl = document.createElement('a-circle')\n      this.selectionEl.setAttribute('radius', this.data.selectionSize)\n      this.selectionEl.setAttribute('material', defaultMaterial)\n\n      //Place in top left, lift slightly\n      this.selectionEl.setAttribute('position', {\n        x: -this.data.wheelSize,\n        y: this.data.wheelSize,\n        z: 0.001\n      })\n      this.el.appendChild(this.selectionEl)\n    }\n\n    //Color 'cursor'. We'll use this to indicate a rough color selection\n    this.colorCursorOptions = {\n      cursorRadius: 0.025,\n      cursorSegments: 32,\n      cursorColor: new THREE.Color(0x000000)\n    }\n    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n      color: this.colorCursorOptions.cursorColor,\n      transparent: true\n    });\n\n    this.colorCursor = document.createElement('a-entity')\n    this.brightnessCursor = document.createElement('a-entity')\n\n    let geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4)\n    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\n    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\n\n    this.el.appendChild(this.colorCursor)\n    this.brightnessSlider.appendChild(this.brightnessCursor)\n    this.brightnessCursor.setAttribute('position', {\n      x: 0,\n      y: this.brightnessSliderHeight / 2,\n      z: 0\n    })\n\n    //Handlers\n    this.bindMethods()\n\n    setTimeout(() => {\n\n      that.el.initColorWheel()\n      that.el.initBrightnessSlider()\n      that.el.refreshRaycaster()\n\n      that.colorWheel.addEventListener('click', function(evt) {\n        if (that.data.disabled) return;\n        that.el.onHueDown(evt.detail.intersection.point)\n      });\n\n      that.brightnessSlider.addEventListener('click', function(evt) {\n        if (that.data.disabled) return;\n        that.el.onBrightnessDown(evt.detail.intersection.point)\n      });\n\n    }, 5)\n  },\n\n  bindMethods: function() {\n    this.el.initColorWheel = this.initColorWheel.bind(this)\n    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this)\n    this.el.updateColor = this.updateColor.bind(this)\n    this.el.onHueDown = this.onHueDown.bind(this)\n    this.el.onBrightnessDown = this.onBrightnessDown.bind(this)\n    this.el.refreshRaycaster = this.refreshRaycaster.bind(this)\n  },\n\n  refreshRaycaster: function() {\n    const raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]')\n    raycasterEl.components.raycaster.refreshObjects()\n  },\n\n  initBrightnessSlider: function() {\n    /*\n     * NOTE:\n     *\n     * In A-Painter, the brightness slider is actually a model submesh / element.\n     * Here we generate it using glsl here and add it to our plane material\n     */\n\n    const vertexShader = `\n      varying vec2 vUv;\n      void main(){\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n      }\n    `\n\n    const fragmentShader = `\n      uniform vec3 color1;\n      uniform vec3 color2;\n      varying vec2 vUv;\n\n      void main(){\n        vec4 c1 = vec4(color1, 1.0);\n  \t    vec4 c2 = vec4(color2, 1.0);\n\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\n        gl_FragColor = color;\n      }\n    `\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        color1: {\n          type: 'c',\n          value: new THREE.Color(0xFFFFFF)\n        },\n        color2: {\n          type: 'c',\n          value: new THREE.Color(0x000000)\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    })\n\n    this.brightnessSlider.getObject3D('mesh').material = material;\n    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\n  },\n  initColorWheel: function() {\n    let colorWheel = this.colorWheel.getObject3D('mesh')\n    const vertexShader = `\n\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix * mvPosition;\n      }\n    `;\n\n    const fragmentShader = `\n      #define M_PI2 6.28318530718\n      uniform float brightness;\n      varying vec2 vUv;\n      vec3 hsb2rgb(in vec3 c){\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n          return c.z * mix( vec3(1.0), rgb, c.y);\n      }\n\n      void main() {\n        vec2 toCenter = vec2(0.5) - vUv;\n        float angle = atan(toCenter.y, toCenter.x);\n        float radius = length(toCenter) * 2.0;\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\n        gl_FragColor = vec4(color, 1.0);\n      }\n      `;\n\n    let material = new THREE.ShaderMaterial({\n      uniforms: {\n        brightness: {\n          type: 'f',\n          value: this.hsv.v\n        }\n      },\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    });\n\n    colorWheel.material = material\n    colorWheel.material.needsUpdate = true\n  },\n  onBrightnessDown: function(position) {\n    const brightnessSlider = this.brightnessSlider.getObject3D('mesh')\n    const brightnessCursor = this.brightnessCursor.getObject3D('mesh')\n    const colorWheel = this.colorWheel.getObject3D('mesh')\n\n    brightnessSlider.updateMatrixWorld()\n    brightnessSlider.worldToLocal(position)\n\n    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n    let cursorOffset = position.y + this.brightnessSliderHeight / 2\n    let brightness = cursorOffset / this.brightnessSliderHeight\n    let updatedPosition = {\n      x: 0,\n      y: position.y - this.brightnessSliderHeight / 2,\n      z: 0\n    }\n\n    //Set brightness cursor position to offset position\n    // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n    this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition)\n\n    //Update material brightness\n    colorWheel.material.uniforms['brightness'].value = brightness\n    this.hsv.v = brightness\n    this.el.updateColor()\n  },\n  onHueDown: function(position) {\n    const colorWheel = this.colorWheel.getObject3D('mesh'),\n      colorCursor = this.colorCursor.getObject3D('mesh'),\n      radius = this.data.wheelSize\n\n    colorWheel.updateMatrixWorld()\n    colorWheel.worldToLocal(position)\n\n    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n    this.setPositionTween(colorCursor, colorCursor.position, position)\n\n    //Determine Hue and Saturation value from polar co-ordinates\n    let polarPosition = {\n      r: Math.sqrt(position.x * position.x + position.y * position.y),\n      theta: Math.PI + Math.atan2(position.y, position.x)\n    }\n\n    let angle = ((polarPosition.theta * (180 / Math.PI)) + 180) % 360\n    this.hsv.h = angle / 360\n    this.hsv.s = polarPosition.r / radius\n\n    this.el.updateColor()\n  },\n\n  updateColor: function() {\n    let rgb = this.hsvToRgb(this.hsv)\n    let color = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\n\n    const selectionEl = this.selectionEl.getObject3D('mesh'),\n      colorCursor = this.colorCursor.getObject3D('mesh'),\n      brightnessCursor = this.brightnessCursor.getObject3D('mesh')\n\n\n    //Update indicator element of selected color\n    if (this.data.showSelection) {\n      //Uncomment for no tweens: selectionEl.material.color.set(color)\n      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color))\n      selectionEl.material.needsUpdate = true\n    }\n\n    //Change cursor colors based on brightness\n    if(this.hsv.v >= 0.5){\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000))\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000))\n    } else {\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF))\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF))\n\n    }\n\n    //Notify listeners the color has changed.\n    Event.emit(this.el, 'changecolor', {\n      style: color,\n      rgb: rgb,\n      hsv: this.hsv\n    })\n    Event.emit(document.body, 'didchangecolor', {\n      style: color,\n      rgb: rgb,\n      hsv: this.hsv\n    })\n\n  },\n  hsvToRgb: function(hsv) {\n    var r, g, b, i, f, p, q, t;\n    var h = THREE.Math.clamp(hsv.h, 0, 1);\n    var s = THREE.Math.clamp(hsv.s, 0, 1);\n    var v = hsv.v;\n\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    return {\n      r: Math.round(r * 255),\n      g: Math.round(g * 255),\n      b: Math.round(b * 255)\n    };\n  },\n  update: function(oldData) {\n    this.background.setAttribute('color', this.data.backgroundColor)\n  },\n  tick: function() {},\n  remove: function() {},\n  pause: function() {},\n  play: function() {}\n});\n\nAFRAME.registerPrimitive('a-colorwheel', {\n  defaultComponents: {\n    colorwheel: {}\n  },\n  mappings: {\n    disabled: 'colorwheel.disabled',\n    backgroundcolor: 'colorwheel.backgroundColor',\n    showselection: 'colorwheel.showSelection',\n    wheelsize: 'colorwheel.wheelSize',\n    selectionsize: 'colorwheel.selectionSize'\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","!function(e){function t(s){if(i[s])return i[s].exports;var o=i[s]={exports:{},id:s,loaded:!1};return e[s].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var i={};return t.m=e,t.c=i,t.p=\"\",t(0)}([function(e,t,i){\"use strict\";var s=i(1);AFRAME.registerComponent(\"colorwheel\",{dependencies:[\"raycaster\"],tweenDuration:280,tweenEasing:TWEEN.Easing.Cubic.Out,padding:.15,hsv:{h:0,s:0,v:1},color:\"#ffffff\",schema:{value:{type:\"string\",default:\"\"},name:{type:\"string\",default:\"\"},disabled:{type:\"boolean\",default:!1},color:{type:\"color\",default:\"#000\"},backgroundColor:{type:\"color\",default:\"#FFF\"},wheelSize:{type:\"number\",default:.4},showSelection:{type:\"boolean\",default:!0},selectionSize:{type:\"number\",default:.1}},setPositionTween:function(e,t,i){this.tween=new TWEEN.Tween(t).to(i,this.tweenDuration).onUpdate(function(){e.position.x=this.x,e.position.y=this.y,e.position.z=this.z}).easing(this.tweenEasing).start()},setColorTween:function(e,t,i){this.tween=new TWEEN.Tween(new THREE.Color(t)).to(i,this.tweenDuration).onUpdate(function(){e.color.r=this.r,e.color.g=this.g,e.color.b=this.b}).easing(this.tweenEasing).start()},init:function(){var e=this,t=this.padding,i={color:\"#ffffff\",flatShading:!0,transparent:!0,fog:!1,side:\"double\"};this.backgroundWidth=this.backgroundHeight=2*this.data.wheelSize,AFRAME.components.hasOwnProperty(\"rounded\")?(this.background=document.createElement(\"a-rounded\"),this.background.setAttribute(\"radius\",.02)):this.background=document.createElement(\"a-entity\"),console.debug(this.background),this.background.setAttribute(\"width\",this.backgroundWidth+2*t),this.background.setAttribute(\"height\",this.backgroundHeight+2*t),this.background.setAttribute(\"position\",{x:-(this.data.wheelSize+t),y:-(this.data.wheelSize+t),z:-.001}),this.background.setAttribute(\"side\",\"double\"),this.el.appendChild(this.background),this.colorWheel=document.createElement(\"a-circle\"),this.colorWheel.setAttribute(\"radius\",this.data.wheelSize),this.colorWheel.setAttribute(\"material\",i),this.colorWheel.setAttribute(\"position\",{x:0,y:0,z:0}),this.el.appendChild(this.colorWheel),this.brightnessSliderHeight=2*(this.data.wheelSize+t),this.brightnessSliderWidth=.1,this.brightnessSlider=document.createElement(\"a-plane\"),this.brightnessSlider.setAttribute(\"width\",this.brightnessSliderWidth),this.brightnessSlider.setAttribute(\"height\",this.brightnessSliderHeight),this.brightnessSlider.setAttribute(\"material\",i),this.brightnessSlider.setAttribute(\"position\",{x:this.data.wheelSize+this.brightnessSliderWidth,y:0,z:0}),this.el.appendChild(this.brightnessSlider),this.data.showSelection&&(this.selectionEl=document.createElement(\"a-circle\"),this.selectionEl.setAttribute(\"radius\",this.data.selectionSize),this.selectionEl.setAttribute(\"material\",i),this.selectionEl.setAttribute(\"position\",{x:-this.data.wheelSize,y:this.data.wheelSize,z:.001}),this.el.appendChild(this.selectionEl)),this.colorCursorOptions={cursorRadius:.025,cursorSegments:32,cursorColor:new THREE.Color(0)},this.colorCursorOptions.cursorMaterial=new THREE.MeshBasicMaterial({color:this.colorCursorOptions.cursorColor,transparent:!0}),this.colorCursor=document.createElement(\"a-entity\"),this.brightnessCursor=document.createElement(\"a-entity\");var s=new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius,this.colorCursorOptions.cursorRadius-.02,this.colorCursorOptions.cursorSegments,this.colorCursorOptions.cursorSegments/4);this.colorCursor.setObject3D(\"mesh\",new THREE.Mesh(s,this.colorCursorOptions.cursorMaterial)),this.brightnessCursor.setObject3D(\"mesh\",new THREE.Mesh(s,this.colorCursorOptions.cursorMaterial)),this.el.appendChild(this.colorCursor),this.brightnessSlider.appendChild(this.brightnessCursor),this.brightnessCursor.setAttribute(\"position\",{x:0,y:this.brightnessSliderHeight/2,z:0}),this.bindMethods(),setTimeout(function(){e.el.initColorWheel(),e.el.initBrightnessSlider(),e.el.refreshRaycaster(),e.colorWheel.addEventListener(\"click\",function(t){e.data.disabled||e.el.onHueDown(t.detail.intersection.point)}),e.brightnessSlider.addEventListener(\"click\",function(t){e.data.disabled||e.el.onBrightnessDown(t.detail.intersection.point)})},5)},bindMethods:function(){this.el.initColorWheel=this.initColorWheel.bind(this),this.el.initBrightnessSlider=this.initBrightnessSlider.bind(this),this.el.updateColor=this.updateColor.bind(this),this.el.onHueDown=this.onHueDown.bind(this),this.el.onBrightnessDown=this.onBrightnessDown.bind(this),this.el.refreshRaycaster=this.refreshRaycaster.bind(this)},refreshRaycaster:function(){var e=AFRAME.scenes[0].querySelector(\"[raycaster]\");e.components.raycaster.refreshObjects()},initBrightnessSlider:function(){var e=\"\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    \",t=\"\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\\n        gl_FragColor = color;\\n      }\\n    \",i=new THREE.ShaderMaterial({uniforms:{color1:{type:\"c\",value:new THREE.Color(16777215)},color2:{type:\"c\",value:new THREE.Color(0)}},vertexShader:e,fragmentShader:t});this.brightnessSlider.getObject3D(\"mesh\").material=i,this.brightnessSlider.getObject3D(\"mesh\").material.needsUpdate=!0},initColorWheel:function(){var e=this.colorWheel.getObject3D(\"mesh\"),t=\"\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    \",i=\"\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      \",s=new THREE.ShaderMaterial({uniforms:{brightness:{type:\"f\",value:this.hsv.v}},vertexShader:t,fragmentShader:i});e.material=s,e.material.needsUpdate=!0},onBrightnessDown:function(e){var t=this.brightnessSlider.getObject3D(\"mesh\"),i=this.brightnessCursor.getObject3D(\"mesh\"),s=this.colorWheel.getObject3D(\"mesh\");t.updateMatrixWorld(),t.worldToLocal(e);var o=e.y+this.brightnessSliderHeight/2,r=o/this.brightnessSliderHeight,n={x:0,y:e.y-this.brightnessSliderHeight/2,z:0};this.setPositionTween(i,i.position,n),s.material.uniforms.brightness.value=r,this.hsv.v=r,this.el.updateColor()},onHueDown:function(e){var t=this.colorWheel.getObject3D(\"mesh\"),i=this.colorCursor.getObject3D(\"mesh\"),s=this.data.wheelSize;t.updateMatrixWorld(),t.worldToLocal(e),this.setPositionTween(i,i.position,e);var o={r:Math.sqrt(e.x*e.x+e.y*e.y),theta:Math.PI+Math.atan2(e.y,e.x)},r=(o.theta*(180/Math.PI)+180)%360;this.hsv.h=r/360,this.hsv.s=o.r/s,this.el.updateColor()},updateColor:function(){var e=this.hsvToRgb(this.hsv),t=\"rgb(\"+e.r+\", \"+e.g+\", \"+e.b+\")\",i=this.selectionEl.getObject3D(\"mesh\"),o=this.colorCursor.getObject3D(\"mesh\"),r=this.brightnessCursor.getObject3D(\"mesh\");this.data.showSelection&&(this.setColorTween(i.material,i.material.color,new THREE.Color(t)),i.material.needsUpdate=!0),this.hsv.v>=.5?(this.setColorTween(o.material,o.material.color,new THREE.Color(0)),this.setColorTween(r.material,r.material.color,new THREE.Color(0))):(this.setColorTween(o.material,o.material.color,new THREE.Color(16777215)),this.setColorTween(r.material,r.material.color,new THREE.Color(16777215))),s.emit(this.el,\"changecolor\",{style:t,rgb:e,hsv:this.hsv}),s.emit(document.body,\"didchangecolor\",{style:t,rgb:e,hsv:this.hsv})},hsvToRgb:function(e){var t,i,s,o,r,n,h,l,a=THREE.Math.clamp(e.h,0,1),c=THREE.Math.clamp(e.s,0,1),d=e.v;switch(o=Math.floor(6*a),r=6*a-o,n=d*(1-c),h=d*(1-r*c),l=d*(1-(1-r)*c),o%6){case 0:t=d,i=l,s=n;break;case 1:t=h,i=d,s=n;break;case 2:t=n,i=d,s=l;break;case 3:t=n,i=h,s=d;break;case 4:t=l,i=n,s=d;break;case 5:t=d,i=n,s=h}return{r:Math.round(255*t),g:Math.round(255*i),b:Math.round(255*s)}},update:function(e){this.background.setAttribute(\"color\",this.data.backgroundColor)},tick:function(){},remove:function(){},pause:function(){},play:function(){}}),AFRAME.registerPrimitive(\"a-colorwheel\",{defaultComponents:{colorwheel:{}},mappings:{value:\"colorwheel.value\",name:\"colorwheel.name\",disabled:\"colorwheel.disabled\",color:\"colorwheel.color\",backgroundcolor:\"colorwheel.backgroundColor\",showselection:\"colorwheel.showSelection\",wheelsize:\"colorwheel.wheelSize\",selectionsize:\"colorwheel.selectionSize\"}})},function(e,t){\"use strict\";e.exports={emit:function(e,t,i){e.dispatchEvent(new CustomEvent(t,{detail:i}))}}}]);\n//# sourceMappingURL=aframe-colorwheel-component.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./dist/aframe-colorwheel-component.min.js","module.exports = {\n  emit: (el, name, data)=> {\n    el.dispatchEvent( new CustomEvent(name, {detail: data}) );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}