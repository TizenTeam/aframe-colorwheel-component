{"version":3,"sources":["webpack:///aframe-colorwheel-component.js","webpack:///webpack/bootstrap 86f859373b9ef0650ed0","webpack:///./index.js","webpack:///./src/utils.js","webpack:///./~/copy-to-clipboard/index.js","webpack:///./~/toggle-selection/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Error","_interopRequireDefault","obj","__esModule","default","_copyToClipboard","_copyToClipboard2","Event","AFRAME","registerComponent","dependencies","tweenDuration","tweenEasing","TWEEN","Easing","Cubic","Out","padding","hsv","h","s","v","defaultMaterial","color","flatShading","transparent","shader","fog","side","schema","disabled","type","backgroundColor","wheelSize","showSelection","selectionSize","showHexValue","showSwatches","swatches","setPositionTween","item","fromPosition","toPosition","this","tween","Tween","to","onUpdate","position","x","y","z","easing","start","setColorTween","fromColor","toColor","THREE","Color","r","g","b","setRotationTween","fromRotation","toRotation","init","that","backgroundWidth","backgroundHeight","data","brightnessSliderHeight","brightnessSliderWidth","components","hasOwnProperty","background","document","createElement","setAttribute","el","appendChild","swatchReady","swatchContainer","addEventListener","bind","generateSwatches","hexValueHeight","hexValueWidth","hexValueText","primitive","width","height","align","baseline","wrapCount","textEl","getAttribute","value","colorWheel","brightnessSlider","selectionEl","colorCursorOptions","cursorRadius","cursorSegments","cursorColor","cursorMaterial","MeshBasicMaterial","colorCursor","brightnessCursor","geometry","TorusBufferGeometry","setObject3D","Mesh","bindMethods","setTimeout","initColorWheel","initBrightnessSlider","refreshRaycaster","evt","onHueDown","detail","intersection","point","onBrightnessDown","swatchData","undefined","containerWidth","containerHeight","swatchWidth","length","_loop","i","swatch","findPositions","updateColor","raycasterEl","scenes","querySelector","raycaster","refreshObjects","vertexShader","fragmentShader","material","ShaderMaterial","uniforms","color1","color2","getObject3D","needsUpdate","brightness","rgb","hexToRgb","rgbToHsv","angle","Math","PI","radius","cos","sin","colorPosition","Vector3","localToWorld","offset","bY","brightnessPosition","updateMatrixWorld","worldToLocal","cursorOffset","updatedPosition","polarPosition","sqrt","theta","atan2","hsvToRgb","hex","getHexString","eventDetail","style","emit","body","replace","substring","match","map","parseInt","max","min","d","arguments","f","q","t","clamp","floor","round","update","oldData","tick","remove","pause","play","registerPrimitive","defaultComponents","colorwheel","mappings","backgroundcolor","showselection","wheelsize","selectionsize","showhexvalue","showswatches","name","dispatchEvent","CustomEvent","format","message","copyKey","test","navigator","userAgent","copy","text","options","debug","reselectPrevious","range","selection","mark","success","deselectCurrent","createRange","getSelection","textContent","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","selectNode","addRange","successful","execCommand","err","console","error","warn","window","clipboardData","setData","defaultMessage","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","push","getRangeAt","tagName","toUpperCase","blur","forEach","focus"],"mappings":"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","file":"aframe-colorwheel-component.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(1);\n\t(function webpackMissingModule() { throw new Error(\"Cannot find module \\\"dist/aframe-colorwheel-component.min.js\\\"\"); }());\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _copyToClipboard = __webpack_require__(3);\n\t\n\tvar _copyToClipboard2 = _interopRequireDefault(_copyToClipboard);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * Colorwheel for A-FRAME Material\r\n\t * @author Mo Kargas (DEVLAD) mo@devlad.com\r\n\t */\n\t\n\tvar Event = __webpack_require__(2);\n\t\n\t\n\tAFRAME.registerComponent('colorwheel', {\n\t  dependencies: ['raycaster'],\n\t  tweenDuration: 280,\n\t  tweenEasing: TWEEN.Easing.Cubic.Out,\n\t  padding: 0.15,\n\t  hsv: {\n\t    h: 0.0,\n\t    s: 0.0,\n\t    v: 1.0\n\t  },\n\t  defaultMaterial: {\n\t    color: '#ffffff',\n\t    flatShading: true,\n\t    transparent: true,\n\t    shader: 'flat',\n\t    fog: false,\n\t    side: 'double'\n\t  },\n\t  color: '#ffffff',\n\t  schema: {\n\t    disabled: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t    backgroundColor: {\n\t      type: 'color',\n\t      default: '#FFF'\n\t    },\n\t    //Size of the colorWheel. NOTE: Assumed in metres.\n\t    wheelSize: {\n\t      type: 'number',\n\t      default: 0.4\n\t    },\n\t    //Show color choice in an element\n\t    showSelection: {\n\t      type: 'boolean',\n\t      default: true\n\t    },\n\t    selectionSize: {\n\t      type: 'number',\n\t      default: 0.10\n\t    },\n\t    showHexValue: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t    showSwatches: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t    swatches: {\n\t      type: 'array',\n\t      default: ['#000000', '#FFFFFF', '#ff0000', '#007dff', '#ffed00']\n\t    }\n\t  },\n\t  //Util to animate between positions. Item represents a mesh or object containing a position\n\t  setPositionTween: function setPositionTween(item, fromPosition, toPosition) {\n\t    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function () {\n\t      item.position.x = this.x;\n\t      item.position.y = this.y;\n\t      item.position.z = this.z;\n\t    }).easing(this.tweenEasing).start();\n\t\n\t    return this.tween;\n\t  },\n\t  //Util to animate between colors. Item represents a mesh or object's material\n\t  setColorTween: function setColorTween(item, fromColor, toColor) {\n\t    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function () {\n\t      item.color.r = this.r;\n\t      item.color.g = this.g;\n\t      item.color.b = this.b;\n\t    }).easing(this.tweenEasing).start();\n\t\n\t    return this.tween;\n\t  },\n\t  //Util to rotate between rotations. Item represents a mesh\n\t  setRotationTween: function setRotationTween(fromRotation, toRotation) {\n\t    this.tween = new TWEEN.Tween(fromRotation).to(toRotation, this.tweenDuration).start();\n\t    return this.tween;\n\t  },\n\t  init: function init() {\n\t    var that = this,\n\t        padding = this.padding,\n\t        defaultMaterial = this.defaultMaterial;\n\t\n\t    //Background color of this interface\n\t    //TODO: Expose sizing for deeper customisation?\n\t    this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2;\n\t    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2;\n\t    this.brightnessSliderWidth = 0.10;\n\t\n\t    //Check if we have the a-rounded component\n\t    if (AFRAME.components.hasOwnProperty('rounded')) {\n\t      this.background = document.createElement('a-rounded');\n\t      this.background.setAttribute('radius', 0.02);\n\t      this.background.setAttribute('position', {\n\t        x: -(this.data.wheelSize + padding),\n\t        y: -(this.data.wheelSize + padding),\n\t        z: -0.001\n\t      });\n\t    } else {\n\t      this.background = document.createElement('a-plane');\n\t      this.background.setAttribute('position', {\n\t        x: 0,\n\t        y: 0,\n\t        z: -0.001\n\t      });\n\t    }\n\t    this.background.setAttribute('width', this.backgroundWidth + 2 * padding);\n\t    this.background.setAttribute('height', this.backgroundHeight + 2 * padding);\n\t    this.background.setAttribute('material', 'shader', 'flat');\n\t    this.background.setAttribute('side', 'double');\n\t    this.el.appendChild(this.background);\n\t\n\t    //Show Swatches\n\t    this.swatchReady = false;\n\t    this.swatchContainer = document.createElement('a-plane');\n\t    this.swatchContainer.addEventListener('loaded', function () {\n\t      this.swatchReady = true;\n\t    }.bind(this));\n\t\n\t    if (this.data.showSwatches) this.generateSwatches(this.data.swatches);\n\t\n\t    //Show hex value display\n\t    if (this.data.showHexValue) {\n\t      var hexValueHeight = 0.1,\n\t          hexValueWidth = 2 * (this.data.wheelSize + padding);\n\t\n\t      this.hexValueText = document.createElement('a-entity');\n\t\n\t      //A basic geo is required for interactions\n\t      this.hexValueText.setAttribute('geometry', {\n\t        primitive: 'plane',\n\t        width: hexValueWidth - this.brightnessSliderWidth,\n\t        height: hexValueHeight\n\t      });\n\t\n\t      this.hexValueText.setAttribute('material', defaultMaterial);\n\t      this.hexValueText.setAttribute('position', {\n\t        x: -this.brightnessSliderWidth,\n\t        y: this.data.wheelSize + hexValueHeight,\n\t        z: 0.0\n\t      });\n\t\n\t      this.hexValueText.setAttribute('material', 'opacity', 0);\n\t      this.hexValueText.setAttribute('text', {\n\t        width: hexValueWidth,\n\t        height: hexValueHeight,\n\t        align: 'right',\n\t        baseline: 'center',\n\t        wrapCount: 20.4,\n\t        color: '#666'\n\t      });\n\t\n\t      //Copy value to clipboard on click\n\t      this.hexValueText.addEventListener('click', function () {\n\t        var textEl = that.hexValueText.getAttribute('text');\n\t        (0, _copyToClipboard2.default)(textEl.value);\n\t      });\n\t\n\t      this.el.appendChild(this.hexValueText);\n\t    }\n\t\n\t    //Circle for colorwheel\n\t    this.colorWheel = document.createElement('a-circle');\n\t    this.colorWheel.setAttribute('radius', this.data.wheelSize);\n\t    this.colorWheel.setAttribute('material', defaultMaterial);\n\t    this.colorWheel.setAttribute('position', {\n\t      x: 0,\n\t      y: 0,\n\t      z: 0.001\n\t    });\n\t    this.el.appendChild(this.colorWheel);\n\t\n\t    //Plane for the brightness slider\n\t    this.brightnessSlider = document.createElement('a-plane');\n\t    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth);\n\t    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight);\n\t    this.brightnessSlider.setAttribute('material', defaultMaterial);\n\t    this.brightnessSlider.setAttribute('position', {\n\t      x: this.data.wheelSize + this.brightnessSliderWidth,\n\t      y: 0,\n\t      z: 0.001\n\t    });\n\t    this.el.appendChild(this.brightnessSlider);\n\t\n\t    //Plane the color selection element will inhabit\n\t    if (this.data.showSelection) {\n\t      this.selectionEl = document.createElement('a-circle');\n\t      this.selectionEl.setAttribute('radius', this.data.selectionSize);\n\t      this.selectionEl.setAttribute('material', defaultMaterial);\n\t\n\t      //Place in top left, lift slightly\n\t      this.selectionEl.setAttribute('position', {\n\t        x: -this.data.wheelSize,\n\t        y: this.data.wheelSize,\n\t        z: 0.001\n\t      });\n\t      this.el.appendChild(this.selectionEl);\n\t    }\n\t\n\t    //Color 'cursor'. We'll use this to indicate a rough color selection\n\t    this.colorCursorOptions = {\n\t      cursorRadius: 0.025,\n\t      cursorSegments: 32,\n\t      cursorColor: new THREE.Color(0x000000)\n\t    };\n\t\n\t    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\n\t      color: this.colorCursorOptions.cursorColor,\n\t      transparent: true\n\t    });\n\t\n\t    this.colorCursor = document.createElement('a-entity');\n\t    this.brightnessCursor = document.createElement('a-entity');\n\t\n\t    var geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4);\n\t    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial));\n\t\n\t    this.el.appendChild(this.colorCursor);\n\t    this.brightnessSlider.appendChild(this.brightnessCursor);\n\t    this.brightnessCursor.setAttribute('position', {\n\t      x: 0,\n\t      y: this.brightnessSliderHeight / 2,\n\t      z: 0\n\t    });\n\t\n\t    //Handlers\n\t    this.bindMethods();\n\t\n\t    setTimeout(function () {\n\t      that.el.initColorWheel();\n\t      that.el.initBrightnessSlider();\n\t      that.el.refreshRaycaster();\n\t\n\t      that.colorWheel.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onHueDown(evt.detail.intersection.point);\n\t      });\n\t\n\t      that.brightnessSlider.addEventListener('click', function (evt) {\n\t        if (that.data.disabled) return;\n\t        that.el.onBrightnessDown(evt.detail.intersection.point);\n\t      });\n\t    }, 5);\n\t  },\n\t  generateSwatches: function generateSwatches(swatchData) {\n\t    //Generate clickable swatch elements from a given array\n\t    if (swatchData === undefined) return;\n\t\n\t    var that = this,\n\t        containerWidth = (this.data.wheelSize + this.padding) * 2,\n\t        containerHeight = 0.15,\n\t        swatchWidth = containerWidth / swatchData.length;\n\t\n\t    //create container\n\t    this.swatchContainer.setAttribute('width', containerWidth);\n\t    this.swatchContainer.setAttribute('height', containerHeight);\n\t    this.swatchContainer.setAttribute('material', this.defaultMaterial);\n\t    this.swatchContainer.setAttribute('material', 'shader', 'flat');\n\t    this.swatchContainer.setAttribute('position', {\n\t      x: 0,\n\t      y: -this.backgroundHeight + containerHeight,\n\t      z: 0.03\n\t    });\n\t    this.swatchContainer.setAttribute('rotation', {\n\t      x: -30,\n\t      y: 0,\n\t      z: 0\n\t    });\n\t\n\t    var _loop = function _loop(i) {\n\t      var color = swatchData[i];\n\t      var swatch = document.createElement('a-plane');\n\t\n\t      swatch.setAttribute('material', that.defaultMaterial);\n\t      swatch.setAttribute('material', 'shader', 'flat');\n\t      swatch.setAttribute('width', swatchWidth);\n\t      swatch.setAttribute('height', containerHeight);\n\t      swatch.setAttribute('color', color);\n\t      swatch.setAttribute('class', 'swatch');\n\t      swatch.setAttribute('position', {\n\t        x: -(containerWidth - swatchWidth) / 2 + i * swatchWidth,\n\t        y: 0,\n\t        z: 0.001 //prevent z-fighting\n\t      });\n\t      swatch.addEventListener('click', function () {\n\t        return that.findPositions(color);\n\t      });\n\t      that.swatchContainer.appendChild(swatch);\n\t    };\n\t\n\t    for (var i = 0; i < swatchData.length; i++) {\n\t      _loop(i);\n\t    }\n\t\n\t    this.el.appendChild(this.swatchContainer);\n\t  },\n\t  bindMethods: function bindMethods() {\n\t    this.el.generateSwatches = this.generateSwatches.bind(this);\n\t    this.el.initColorWheel = this.initColorWheel.bind(this);\n\t    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this);\n\t    this.el.updateColor = this.updateColor.bind(this);\n\t    this.el.onHueDown = this.onHueDown.bind(this);\n\t    this.el.onBrightnessDown = this.onBrightnessDown.bind(this);\n\t    this.el.refreshRaycaster = this.refreshRaycaster.bind(this);\n\t  },\n\t  refreshRaycaster: function refreshRaycaster() {\n\t    var raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]');\n\t    raycasterEl.components.raycaster.refreshObjects();\n\t  },\n\t  initBrightnessSlider: function initBrightnessSlider() {\n\t    /*\r\n\t     * NOTE:\r\n\t     *\r\n\t     * In A-Painter, the brightness slider is actually a model submesh / element.\r\n\t     * Here we generate it using glsl here and add it to our plane material\r\n\t     */\n\t\n\t    var vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\\n        gl_FragColor = color;\\n      }\\n    ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        color1: {\n\t          type: 'c',\n\t          value: new THREE.Color(0xFFFFFF)\n\t        },\n\t        color2: {\n\t          type: 'c',\n\t          value: new THREE.Color(0x000000)\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    this.brightnessSlider.getObject3D('mesh').material = material;\n\t    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n\t  },\n\t  initColorWheel: function initColorWheel() {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t    var vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\n\t\n\t    var fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\n\t\n\t    var material = new THREE.ShaderMaterial({\n\t      uniforms: {\n\t        brightness: {\n\t          type: 'f',\n\t          value: this.hsv.v\n\t        }\n\t      },\n\t      vertexShader: vertexShader,\n\t      fragmentShader: fragmentShader\n\t    });\n\t\n\t    colorWheel.material = material;\n\t    colorWheel.material.needsUpdate = true;\n\t  },\n\t  findPositions: function findPositions(color) {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t    var brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t    var brightnessSlider = this.brightnessSlider.getObject3D('mesh');\n\t\n\t    var rgb = this.hexToRgb(color);\n\t    this.hsv = this.rgbToHsv(rgb.r, rgb.g, rgb.b);\n\t\n\t    var angle = this.hsv.h * 2 * Math.PI,\n\t        radius = this.hsv.s * this.data.wheelSize;\n\t\n\t    var x = radius * Math.cos(angle),\n\t        y = radius * Math.sin(angle),\n\t        z = colorWheel.position.z;\n\t\n\t    var colorPosition = new THREE.Vector3(x, y, z);\n\t    colorWheel.localToWorld(colorPosition);\n\t    //We can reuse hueDown for this\n\t    this.onHueDown(colorPosition);\n\t\n\t    //Need to do the reverse of onbrightnessdown\n\t    var offset = this.hsv.v * this.brightnessSliderHeight;\n\t    var bY = offset - this.brightnessSliderHeight;\n\t    var brightnessPosition = new THREE.Vector3(0, bY, 0);\n\t    this.setPositionTween(brightnessCursor, brightnessCursor.position, brightnessPosition);\n\t    colorWheel.material.uniforms['brightness'].value = this.hsv.v;\n\t  },\n\t  onBrightnessDown: function onBrightnessDown(position) {\n\t    var brightnessSlider = this.brightnessSlider.getObject3D('mesh');\n\t    var brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t    var colorWheel = this.colorWheel.getObject3D('mesh');\n\t\n\t    brightnessSlider.updateMatrixWorld();\n\t    brightnessSlider.worldToLocal(position);\n\t\n\t    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n\t    var cursorOffset = position.y + this.brightnessSliderHeight / 2;\n\t    var brightness = cursorOffset / this.brightnessSliderHeight;\n\t    var updatedPosition = {\n\t      x: 0,\n\t      y: position.y - this.brightnessSliderHeight / 2,\n\t      z: 0\n\t\n\t      //Set brightness cursor position to offset position\n\t      // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\n\t    };this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition);\n\t\n\t    //Update material brightness\n\t    colorWheel.material.uniforms['brightness'].value = brightness;\n\t    this.hsv.v = brightness;\n\t    this.el.updateColor();\n\t  },\n\t  onHueDown: function onHueDown(position) {\n\t    var colorWheel = this.colorWheel.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        radius = this.data.wheelSize;\n\t\n\t    colorWheel.updateMatrixWorld();\n\t    colorWheel.worldToLocal(position);\n\t\n\t    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\n\t    this.setPositionTween(colorCursor, colorCursor.position, position);\n\t\n\t    //Determine Hue and Saturation value from polar co-ordinates\n\t    var polarPosition = {\n\t      r: Math.sqrt(position.x * position.x + position.y * position.y),\n\t      theta: Math.PI + Math.atan2(position.y, position.x)\n\t    };\n\t\n\t    var angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\n\t    this.hsv.h = angle / 360;\n\t    this.hsv.s = polarPosition.r / radius;\n\t\n\t    this.el.updateColor();\n\t  },\n\t\n\t  updateColor: function updateColor() {\n\t    var rgb = this.hsvToRgb(this.hsv);\n\t    var color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n\t    var hex = '#' + new THREE.Color(color).getHexString();\n\t\n\t    var selectionEl = this.selectionEl.getObject3D('mesh'),\n\t        colorCursor = this.colorCursor.getObject3D('mesh'),\n\t        brightnessCursor = this.brightnessCursor.getObject3D('mesh');\n\t\n\t    //Update indicator element of selected color\n\t    if (this.data.showSelection) {\n\t      //Uncomment for no tweens: selectionEl.material.color.set(color)\n\t      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color));\n\t      selectionEl.material.needsUpdate = true;\n\t    }\n\t\n\t    //Change cursor colors based on brightness\n\t    if (this.hsv.v >= 0.5) {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000));\n\t    } else {\n\t      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF));\n\t      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF));\n\t    }\n\t\n\t    //showHexValue set to true, update text\n\t    if (this.data.showHexValue) this.hexValueText.setAttribute('text', 'value', hex);\n\t\n\t    //Notify listeners the color has changed.\n\t    var eventDetail = {\n\t      style: color,\n\t      rgb: rgb,\n\t      hsv: this.hsv,\n\t      hex: hex\n\t    };\n\t\n\t    Event.emit(this.el, 'changecolor', eventDetail);\n\t    Event.emit(document.body, 'didchangecolor', eventDetail);\n\t  },\n\t  hexToRgb: function hexToRgb(hex) {\n\t    var rgb = hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, function (m, r, g, b) {\n\t      return '#' + r + r + g + g + b + b;\n\t    }).substring(1).match(/.{2}/g).map(function (x) {\n\t      return parseInt(x, 16);\n\t    });\n\t\n\t    return {\n\t      r: rgb[0],\n\t      g: rgb[1],\n\t      b: rgb[2]\n\t    };\n\t  },\n\t  rgbToHsv: function rgbToHsv(r, g, b) {\n\t    var max = Math.max(r, g, b);\n\t    var min = Math.min(r, g, b);\n\t    var d = max - min;\n\t    var h;\n\t    var s = max === 0 ? 0 : d / max;\n\t    var v = max;\n\t\n\t    if (arguments.length === 1) {\n\t      g = r.g;\n\t      b = r.b;\n\t      r = r.r;\n\t    }\n\t\n\t    switch (max) {\n\t      case min:\n\t        h = 0;\n\t        break;\n\t      case r:\n\t        h = g - b + d * (g < b ? 6 : 0);\n\t        h /= 6 * d;\n\t        break;\n\t      case g:\n\t        h = b - r + d * 2;\n\t        h /= 6 * d;\n\t        break;\n\t      case b:\n\t        h = r - g + d * 4;\n\t        h /= 6 * d;\n\t        break;\n\t    }\n\t    return {\n\t      h: h,\n\t      s: s,\n\t      v: v / 255\n\t    };\n\t  },\n\t  hsvToRgb: function hsvToRgb(hsv) {\n\t    var r, g, b, i, f, p, q, t;\n\t    var h = THREE.Math.clamp(hsv.h, 0, 1);\n\t    var s = THREE.Math.clamp(hsv.s, 0, 1);\n\t    var v = hsv.v;\n\t\n\t    i = Math.floor(h * 6);\n\t    f = h * 6 - i;\n\t    p = v * (1 - s);\n\t    q = v * (1 - f * s);\n\t    t = v * (1 - (1 - f) * s);\n\t    switch (i % 6) {\n\t      case 0:\n\t        r = v;\n\t        g = t;\n\t        b = p;\n\t        break;\n\t      case 1:\n\t        r = q;\n\t        g = v;\n\t        b = p;\n\t        break;\n\t      case 2:\n\t        r = p;\n\t        g = v;\n\t        b = t;\n\t        break;\n\t      case 3:\n\t        r = p;\n\t        g = q;\n\t        b = v;\n\t        break;\n\t      case 4:\n\t        r = t;\n\t        g = p;\n\t        b = v;\n\t        break;\n\t      case 5:\n\t        r = v;\n\t        g = p;\n\t        b = q;\n\t        break;\n\t    }\n\t    return {\n\t      r: Math.round(r * 255),\n\t      g: Math.round(g * 255),\n\t      b: Math.round(b * 255)\n\t    };\n\t  },\n\t  update: function update(oldData) {\n\t    if (!oldData) return;\n\t    this.background.setAttribute('color', this.data.backgroundColor);\n\t  },\n\t  tick: function tick() {},\n\t  remove: function remove() {},\n\t  pause: function pause() {},\n\t  play: function play() {}\n\t});\n\t\n\tAFRAME.registerPrimitive('a-colorwheel', {\n\t  defaultComponents: {\n\t    colorwheel: {}\n\t  },\n\t  mappings: {\n\t    disabled: 'colorwheel.disabled',\n\t    backgroundcolor: 'colorwheel.backgroundColor',\n\t    showselection: 'colorwheel.showSelection',\n\t    wheelsize: 'colorwheel.wheelSize',\n\t    selectionsize: 'colorwheel.selectionSize',\n\t    showhexvalue: 'colorwheel.showHexValue',\n\t    showswatches: 'colorwheel.showSwatches',\n\t    swatches: 'colorwheel.swatches'\n\t  }\n\t});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  emit: function emit(el, name, data) {\n\t    el.dispatchEvent(new CustomEvent(name, { detail: data }));\n\t  }\n\t};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar deselectCurrent = __webpack_require__(4);\n\t\n\tvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\t\n\tfunction format(message) {\n\t  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n\t  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n\t}\n\t\n\tfunction copy(text, options) {\n\t  var debug, message, reselectPrevious, range, selection, mark, success = false;\n\t  if (!options) { options = {}; }\n\t  debug = options.debug || false;\n\t  try {\n\t    reselectPrevious = deselectCurrent();\n\t\n\t    range = document.createRange();\n\t    selection = document.getSelection();\n\t\n\t    mark = document.createElement('span');\n\t    mark.textContent = text;\n\t    // reset user styles for span element\n\t    mark.style.all = 'unset';\n\t    // prevents scrolling to the end of the page\n\t    mark.style.position = 'fixed';\n\t    mark.style.top = 0;\n\t    mark.style.clip = 'rect(0, 0, 0, 0)';\n\t    // used to preserve spaces and line breaks\n\t    mark.style.whiteSpace = 'pre';\n\t    // do not inherit user-select (it may be `none`)\n\t    mark.style.webkitUserSelect = 'text';\n\t    mark.style.MozUserSelect = 'text';\n\t    mark.style.msUserSelect = 'text';\n\t    mark.style.userSelect = 'text';\n\t\n\t    document.body.appendChild(mark);\n\t\n\t    range.selectNode(mark);\n\t    selection.addRange(range);\n\t\n\t    var successful = document.execCommand('copy');\n\t    if (!successful) {\n\t      throw new Error('copy command was unsuccessful');\n\t    }\n\t    success = true;\n\t  } catch (err) {\n\t    debug && console.error('unable to copy using execCommand: ', err);\n\t    debug && console.warn('trying IE specific stuff');\n\t    try {\n\t      window.clipboardData.setData('text', text);\n\t      success = true;\n\t    } catch (err) {\n\t      debug && console.error('unable to copy using clipboardData: ', err);\n\t      debug && console.error('falling back to prompt');\n\t      message = format('message' in options ? options.message : defaultMessage);\n\t      window.prompt(message, text);\n\t    }\n\t  } finally {\n\t    if (selection) {\n\t      if (typeof selection.removeRange == 'function') {\n\t        selection.removeRange(range);\n\t      } else {\n\t        selection.removeAllRanges();\n\t      }\n\t    }\n\t\n\t    if (mark) {\n\t      document.body.removeChild(mark);\n\t    }\n\t    reselectPrevious();\n\t  }\n\t\n\t  return success;\n\t}\n\t\n\tmodule.exports = copy;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function () {\n\t  var selection = document.getSelection();\n\t  if (!selection.rangeCount) {\n\t    return function () {};\n\t  }\n\t  var active = document.activeElement;\n\t\n\t  var ranges = [];\n\t  for (var i = 0; i < selection.rangeCount; i++) {\n\t    ranges.push(selection.getRangeAt(i));\n\t  }\n\t\n\t  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n\t    case 'INPUT':\n\t    case 'TEXTAREA':\n\t      active.blur();\n\t      break;\n\t\n\t    default:\n\t      active = null;\n\t      break;\n\t  }\n\t\n\t  selection.removeAllRanges();\n\t  return function () {\n\t    selection.type === 'Caret' &&\n\t    selection.removeAllRanges();\n\t\n\t    if (!selection.rangeCount) {\n\t      ranges.forEach(function(range) {\n\t        selection.addRange(range);\n\t      });\n\t    }\n\t\n\t    active &&\n\t    active.focus();\n\t  };\n\t};\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// aframe-colorwheel-component.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 86f859373b9ef0650ed0","/**\r\n * Colorwheel for A-FRAME Material\r\n * @author Mo Kargas (DEVLAD) mo@devlad.com\r\n */\r\n\r\nconst Event = require('./src/utils')\r\nimport copy from 'copy-to-clipboard'\r\n\r\nAFRAME.registerComponent('colorwheel', {\r\n  dependencies: ['raycaster'],\r\n  tweenDuration: 280,\r\n  tweenEasing: TWEEN.Easing.Cubic.Out,\r\n  padding: 0.15,\r\n  hsv: {\r\n    h: 0.0,\r\n    s: 0.0,\r\n    v: 1.0\r\n  },\r\n  defaultMaterial: {\r\n    color: '#ffffff',\r\n    flatShading: true,\r\n    transparent: true,\r\n    shader: 'flat',\r\n    fog: false,\r\n    side: 'double'\r\n  },\r\n  color: '#ffffff',\r\n  schema: {\r\n    disabled: {\r\n      type: 'boolean',\r\n      default: false\r\n    },\r\n    backgroundColor: {\r\n      type: 'color',\r\n      default: '#FFF'\r\n    },\r\n    //Size of the colorWheel. NOTE: Assumed in metres.\r\n    wheelSize: {\r\n      type: 'number',\r\n      default: 0.4\r\n    },\r\n    //Show color choice in an element\r\n    showSelection: {\r\n      type: 'boolean',\r\n      default: true\r\n    },\r\n    selectionSize: {\r\n      type: 'number',\r\n      default: 0.10\r\n    },\r\n    showHexValue: {\r\n      type: 'boolean',\r\n      default: false\r\n    },\r\n    showSwatches: {\r\n      type: 'boolean',\r\n      default: false\r\n    },\r\n    swatches: {\r\n      type: 'array',\r\n      default: ['#000000', '#FFFFFF', '#ff0000', '#007dff', '#ffed00']\r\n    }\r\n  },\r\n  //Util to animate between positions. Item represents a mesh or object containing a position\r\n  setPositionTween: function(item, fromPosition, toPosition) {\r\n    this.tween = new TWEEN.Tween(fromPosition).to(toPosition, this.tweenDuration).onUpdate(function() {\r\n      item.position.x = this.x\r\n      item.position.y = this.y\r\n      item.position.z = this.z\r\n    }).easing(this.tweenEasing).start()\r\n\r\n    return this.tween\r\n  },\r\n  //Util to animate between colors. Item represents a mesh or object's material\r\n  setColorTween: function(item, fromColor, toColor) {\r\n    this.tween = new TWEEN.Tween(new THREE.Color(fromColor)).to(toColor, this.tweenDuration).onUpdate(function() {\r\n      item.color.r = this.r\r\n      item.color.g = this.g\r\n      item.color.b = this.b\r\n    }).easing(this.tweenEasing).start()\r\n\r\n    return this.tween\r\n  },\r\n  //Util to rotate between rotations. Item represents a mesh\r\n  setRotationTween: function(fromRotation, toRotation) {\r\n    this.tween = new TWEEN.Tween(fromRotation).to(toRotation, this.tweenDuration).start()\r\n    return this.tween\r\n  },\r\n  init: function() {\r\n    const that = this,\r\n      padding = this.padding,\r\n      defaultMaterial = this.defaultMaterial\r\n\r\n    //Background color of this interface\r\n    //TODO: Expose sizing for deeper customisation?\r\n    this.backgroundWidth = this.backgroundHeight = this.data.wheelSize * 2\r\n    this.brightnessSliderHeight = (this.data.wheelSize + padding) * 2\r\n    this.brightnessSliderWidth = 0.10\r\n\r\n    //Check if we have the a-rounded component\r\n    if (AFRAME.components.hasOwnProperty('rounded')) {\r\n      this.background = document.createElement('a-rounded')\r\n      this.background.setAttribute('radius', 0.02)\r\n      this.background.setAttribute('position', {\r\n        x: -(this.data.wheelSize + padding),\r\n        y: -(this.data.wheelSize + padding),\r\n        z: -0.001\r\n      })\r\n    } else {\r\n      this.background = document.createElement('a-plane')\r\n      this.background.setAttribute('position', {\r\n        x: 0,\r\n        y: 0,\r\n        z: -0.001\r\n      })\r\n    }\r\n    this.background.setAttribute('width', this.backgroundWidth + 2 * padding)\r\n    this.background.setAttribute('height', this.backgroundHeight + 2 * padding)\r\n    this.background.setAttribute('material', 'shader', 'flat')\r\n    this.background.setAttribute('side', 'double')\r\n    this.el.appendChild(this.background)\r\n\r\n    //Show Swatches\r\n    this.swatchReady = false\r\n    this.swatchContainer = document.createElement('a-plane')\r\n    this.swatchContainer.addEventListener('loaded', function() {\r\n      this.swatchReady = true\r\n    }.bind(this));\r\n\r\n    if (this.data.showSwatches) this.generateSwatches(this.data.swatches)\r\n\r\n    //Show hex value display\r\n    if (this.data.showHexValue) {\r\n      let hexValueHeight = 0.1,\r\n        hexValueWidth = 2 * (this.data.wheelSize + padding)\r\n\r\n      this.hexValueText = document.createElement('a-entity')\r\n\r\n      //A basic geo is required for interactions\r\n      this.hexValueText.setAttribute('geometry', {\r\n        primitive: 'plane',\r\n        width: hexValueWidth - this.brightnessSliderWidth,\r\n        height: hexValueHeight\r\n      })\r\n\r\n      this.hexValueText.setAttribute('material', defaultMaterial)\r\n      this.hexValueText.setAttribute('position', {\r\n        x: -this.brightnessSliderWidth,\r\n        y: this.data.wheelSize + hexValueHeight,\r\n        z: 0.0\r\n      })\r\n\r\n      this.hexValueText.setAttribute('material', 'opacity', 0)\r\n      this.hexValueText.setAttribute('text', {\r\n        width: hexValueWidth,\r\n        height: hexValueHeight,\r\n        align: 'right',\r\n        baseline: 'center',\r\n        wrapCount: 20.4,\r\n        color: '#666'\r\n      })\r\n\r\n      //Copy value to clipboard on click\r\n      this.hexValueText.addEventListener('click', function() {\r\n        let textEl = that.hexValueText.getAttribute('text')\r\n        copy(textEl.value)\r\n      })\r\n\r\n      this.el.appendChild(this.hexValueText)\r\n    }\r\n\r\n    //Circle for colorwheel\r\n    this.colorWheel = document.createElement('a-circle')\r\n    this.colorWheel.setAttribute('radius', this.data.wheelSize)\r\n    this.colorWheel.setAttribute('material', defaultMaterial)\r\n    this.colorWheel.setAttribute('position', {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0.001\r\n    })\r\n    this.el.appendChild(this.colorWheel)\r\n\r\n    //Plane for the brightness slider\r\n    this.brightnessSlider = document.createElement('a-plane')\r\n    this.brightnessSlider.setAttribute('width', this.brightnessSliderWidth)\r\n    this.brightnessSlider.setAttribute('height', this.brightnessSliderHeight)\r\n    this.brightnessSlider.setAttribute('material', defaultMaterial)\r\n    this.brightnessSlider.setAttribute('position', {\r\n      x: this.data.wheelSize + this.brightnessSliderWidth,\r\n      y: 0,\r\n      z: 0.001\r\n    })\r\n    this.el.appendChild(this.brightnessSlider)\r\n\r\n    //Plane the color selection element will inhabit\r\n    if (this.data.showSelection) {\r\n      this.selectionEl = document.createElement('a-circle')\r\n      this.selectionEl.setAttribute('radius', this.data.selectionSize)\r\n      this.selectionEl.setAttribute('material', defaultMaterial)\r\n\r\n      //Place in top left, lift slightly\r\n      this.selectionEl.setAttribute('position', {\r\n        x: -this.data.wheelSize,\r\n        y: this.data.wheelSize,\r\n        z: 0.001\r\n      })\r\n      this.el.appendChild(this.selectionEl)\r\n    }\r\n\r\n    //Color 'cursor'. We'll use this to indicate a rough color selection\r\n    this.colorCursorOptions = {\r\n      cursorRadius: 0.025,\r\n      cursorSegments: 32,\r\n      cursorColor: new THREE.Color(0x000000)\r\n    }\r\n\r\n    this.colorCursorOptions.cursorMaterial = new THREE.MeshBasicMaterial({\r\n      color: this.colorCursorOptions.cursorColor,\r\n      transparent: true\r\n    });\r\n\r\n    this.colorCursor = document.createElement('a-entity')\r\n    this.brightnessCursor = document.createElement('a-entity')\r\n\r\n    let geometry = new THREE.TorusBufferGeometry(this.colorCursorOptions.cursorRadius, this.colorCursorOptions.cursorRadius - 0.02, this.colorCursorOptions.cursorSegments, this.colorCursorOptions.cursorSegments / 4)\r\n    this.colorCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\r\n    this.brightnessCursor.setObject3D('mesh', new THREE.Mesh(geometry, this.colorCursorOptions.cursorMaterial))\r\n\r\n    this.el.appendChild(this.colorCursor)\r\n    this.brightnessSlider.appendChild(this.brightnessCursor)\r\n    this.brightnessCursor.setAttribute('position', {\r\n      x: 0,\r\n      y: this.brightnessSliderHeight / 2,\r\n      z: 0\r\n    })\r\n\r\n    //Handlers\r\n    this.bindMethods()\r\n\r\n    setTimeout(() => {\r\n      that.el.initColorWheel()\r\n      that.el.initBrightnessSlider()\r\n      that.el.refreshRaycaster()\r\n\r\n      that.colorWheel.addEventListener('click', function(evt) {\r\n        if (that.data.disabled) return;\r\n        that.el.onHueDown(evt.detail.intersection.point)\r\n      });\r\n\r\n      that.brightnessSlider.addEventListener('click', function(evt) {\r\n        if (that.data.disabled) return;\r\n        that.el.onBrightnessDown(evt.detail.intersection.point)\r\n      });\r\n\r\n    }, 5)\r\n  },\r\n  generateSwatches: function(swatchData) {\r\n    //Generate clickable swatch elements from a given array\r\n    if (swatchData === undefined) return\r\n\r\n    const that = this,\r\n      containerWidth = (this.data.wheelSize + this.padding) * 2,\r\n      containerHeight = 0.15,\r\n      swatchWidth = containerWidth / swatchData.length\r\n\r\n    //create container\r\n    this.swatchContainer.setAttribute('width', containerWidth)\r\n    this.swatchContainer.setAttribute('height', containerHeight)\r\n    this.swatchContainer.setAttribute('material', this.defaultMaterial)\r\n    this.swatchContainer.setAttribute('material', 'shader', 'flat')\r\n    this.swatchContainer.setAttribute('position', {\r\n      x: 0,\r\n      y: -this.backgroundHeight + containerHeight,\r\n      z: 0.03\r\n    })\r\n    this.swatchContainer.setAttribute('rotation', {\r\n      x: -30,\r\n      y: 0,\r\n      z: 0\r\n    })\r\n\r\n    for (let i = 0; i < swatchData.length; i++) {\r\n      let color = swatchData[i]\r\n      let swatch = document.createElement('a-plane')\r\n\r\n      swatch.setAttribute('material', that.defaultMaterial)\r\n      swatch.setAttribute('material', 'shader', 'flat')\r\n      swatch.setAttribute('width', swatchWidth)\r\n      swatch.setAttribute('height', containerHeight)\r\n      swatch.setAttribute('color', color)\r\n      swatch.setAttribute('class', 'swatch')\r\n      swatch.setAttribute('position', {\r\n        x: -(containerWidth - swatchWidth) / 2 + i * swatchWidth,\r\n        y: 0,\r\n        z: 0.001 //prevent z-fighting\r\n      })\r\n      swatch.addEventListener('click', () => that.findPositions(color))\r\n      that.swatchContainer.appendChild(swatch)\r\n    }\r\n\r\n    this.el.appendChild(this.swatchContainer)\r\n  },\r\n  bindMethods: function() {\r\n    this.el.generateSwatches = this.generateSwatches.bind(this)\r\n    this.el.initColorWheel = this.initColorWheel.bind(this)\r\n    this.el.initBrightnessSlider = this.initBrightnessSlider.bind(this)\r\n    this.el.updateColor = this.updateColor.bind(this)\r\n    this.el.onHueDown = this.onHueDown.bind(this)\r\n    this.el.onBrightnessDown = this.onBrightnessDown.bind(this)\r\n    this.el.refreshRaycaster = this.refreshRaycaster.bind(this)\r\n  },\r\n  refreshRaycaster: function() {\r\n    const raycasterEl = AFRAME.scenes[0].querySelector('[raycaster]')\r\n    raycasterEl.components.raycaster.refreshObjects()\r\n  },\r\n  initBrightnessSlider: function() {\r\n    /*\r\n     * NOTE:\r\n     *\r\n     * In A-Painter, the brightness slider is actually a model submesh / element.\r\n     * Here we generate it using glsl here and add it to our plane material\r\n     */\r\n\r\n    const vertexShader = `\r\n      varying vec2 vUv;\r\n      void main(){\r\n        vUv = uv;\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\r\n      }\r\n    `\r\n\r\n    const fragmentShader = `\r\n      uniform vec3 color1;\r\n      uniform vec3 color2;\r\n      varying vec2 vUv;\r\n\r\n      void main(){\r\n        vec4 c1 = vec4(color1, 1.0);\r\n  \t    vec4 c2 = vec4(color2, 1.0);\r\n\r\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.y));\r\n        gl_FragColor = color;\r\n      }\r\n    `\r\n\r\n    let material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        color1: {\r\n          type: 'c',\r\n          value: new THREE.Color(0xFFFFFF)\r\n        },\r\n        color2: {\r\n          type: 'c',\r\n          value: new THREE.Color(0x000000)\r\n        }\r\n      },\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader\r\n    })\r\n\r\n    this.brightnessSlider.getObject3D('mesh').material = material;\r\n    this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\r\n\r\n  },\r\n  initColorWheel: function() {\r\n    const colorWheel = this.colorWheel.getObject3D('mesh')\r\n    const vertexShader = `\r\n\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vUv = uv;\r\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n        gl_Position = projectionMatrix * mvPosition;\r\n      }\r\n    `;\r\n\r\n    const fragmentShader = `\r\n      #define M_PI2 6.28318530718\r\n      uniform float brightness;\r\n      varying vec2 vUv;\r\n      vec3 hsb2rgb(in vec3 c){\r\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\r\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\r\n          return c.z * mix( vec3(1.0), rgb, c.y);\r\n      }\r\n\r\n      void main() {\r\n        vec2 toCenter = vec2(0.5) - vUv;\r\n        float angle = atan(toCenter.y, toCenter.x);\r\n        float radius = length(toCenter) * 2.0;\r\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\r\n        gl_FragColor = vec4(color, 1.0);\r\n      }\r\n      `;\r\n\r\n    let material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        brightness: {\r\n          type: 'f',\r\n          value: this.hsv.v\r\n        }\r\n      },\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader\r\n    });\r\n\r\n    colorWheel.material = material\r\n    colorWheel.material.needsUpdate = true\r\n  },\r\n  findPositions: function(color) {\r\n    const colorWheel = this.colorWheel.getObject3D('mesh')\r\n    const brightnessCursor = this.brightnessCursor.getObject3D('mesh')\r\n    const brightnessSlider = this.brightnessSlider.getObject3D('mesh')\r\n\r\n    let rgb = this.hexToRgb(color)\r\n    this.hsv = this.rgbToHsv(rgb.r, rgb.g, rgb.b)\r\n\r\n    let angle = this.hsv.h * 2 * Math.PI,\r\n      radius = this.hsv.s * this.data.wheelSize\r\n\r\n    let x = radius * Math.cos(angle),\r\n      y = radius * Math.sin(angle),\r\n      z = colorWheel.position.z\r\n\r\n    let colorPosition = new THREE.Vector3(x, y, z)\r\n    colorWheel.localToWorld(colorPosition)\r\n    //We can reuse hueDown for this\r\n    this.onHueDown(colorPosition)\r\n\r\n    //Need to do the reverse of onbrightnessdown\r\n    let offset = this.hsv.v * this.brightnessSliderHeight\r\n    let bY = offset - this.brightnessSliderHeight\r\n    let brightnessPosition = new THREE.Vector3(0, bY, 0)\r\n    this.setPositionTween(brightnessCursor, brightnessCursor.position, brightnessPosition)\r\n    colorWheel.material.uniforms['brightness'].value = this.hsv.v\r\n\r\n  },\r\n  onBrightnessDown: function(position) {\r\n    const brightnessSlider = this.brightnessSlider.getObject3D('mesh')\r\n    const brightnessCursor = this.brightnessCursor.getObject3D('mesh')\r\n    const colorWheel = this.colorWheel.getObject3D('mesh')\r\n\r\n    brightnessSlider.updateMatrixWorld()\r\n    brightnessSlider.worldToLocal(position)\r\n\r\n    //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\r\n    let cursorOffset = position.y + this.brightnessSliderHeight / 2\r\n    let brightness = cursorOffset / this.brightnessSliderHeight\r\n    let updatedPosition = {\r\n      x: 0,\r\n      y: position.y - this.brightnessSliderHeight / 2,\r\n      z: 0\r\n    }\r\n\r\n    //Set brightness cursor position to offset position\r\n    // Uncomment to remove anims: brightnessCursor.position.copy(updatedPosition)\r\n    this.setPositionTween(brightnessCursor, brightnessCursor.position, updatedPosition)\r\n\r\n    //Update material brightness\r\n    colorWheel.material.uniforms['brightness'].value = brightness\r\n    this.hsv.v = brightness\r\n    this.el.updateColor()\r\n  },\r\n  onHueDown: function(position) {\r\n    const colorWheel = this.colorWheel.getObject3D('mesh'),\r\n      colorCursor = this.colorCursor.getObject3D('mesh'),\r\n      radius = this.data.wheelSize\r\n\r\n    colorWheel.updateMatrixWorld()\r\n    colorWheel.worldToLocal(position)\r\n\r\n    // Uncomment to remove anims: this.colorCursor.getObject3D('mesh').position.copy(position)\r\n    this.setPositionTween(colorCursor, colorCursor.position, position)\r\n\r\n    //Determine Hue and Saturation value from polar co-ordinates\r\n    let polarPosition = {\r\n      r: Math.sqrt(position.x * position.x + position.y * position.y),\r\n      theta: Math.PI + Math.atan2(position.y, position.x)\r\n    }\r\n\r\n    let angle = ((polarPosition.theta * (180 / Math.PI)) + 180) % 360\r\n    this.hsv.h = angle / 360\r\n    this.hsv.s = polarPosition.r / radius\r\n\r\n    this.el.updateColor()\r\n  },\r\n\r\n  updateColor: function() {\r\n    let rgb = this.hsvToRgb(this.hsv)\r\n    let color = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`\r\n    let hex = `#${new THREE.Color( color ).getHexString()}`\r\n\r\n    const selectionEl = this.selectionEl.getObject3D('mesh'),\r\n      colorCursor = this.colorCursor.getObject3D('mesh'),\r\n      brightnessCursor = this.brightnessCursor.getObject3D('mesh')\r\n\r\n    //Update indicator element of selected color\r\n    if (this.data.showSelection) {\r\n      //Uncomment for no tweens: selectionEl.material.color.set(color)\r\n      this.setColorTween(selectionEl.material, selectionEl.material.color, new THREE.Color(color))\r\n      selectionEl.material.needsUpdate = true\r\n    }\r\n\r\n    //Change cursor colors based on brightness\r\n    if (this.hsv.v >= 0.5) {\r\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0x000000))\r\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0x000000))\r\n    } else {\r\n      this.setColorTween(colorCursor.material, colorCursor.material.color, new THREE.Color(0xFFFFFF))\r\n      this.setColorTween(brightnessCursor.material, brightnessCursor.material.color, new THREE.Color(0xFFFFFF))\r\n    }\r\n\r\n    //showHexValue set to true, update text\r\n    if (this.data.showHexValue) this.hexValueText.setAttribute('text', 'value', hex)\r\n\r\n    //Notify listeners the color has changed.\r\n    let eventDetail = {\r\n      style: color,\r\n      rgb: rgb,\r\n      hsv: this.hsv,\r\n      hex: hex\r\n    };\r\n\r\n    Event.emit(this.el, 'changecolor', eventDetail)\r\n    Event.emit(document.body, 'didchangecolor', eventDetail)\r\n\r\n  },\r\n  hexToRgb: function(hex) {\r\n    let rgb = hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (m, r, g, b) => '#' + r + r + g + g + b + b)\r\n      .substring(1).match(/.{2}/g)\r\n      .map(x => parseInt(x, 16))\r\n\r\n    return {\r\n      r: rgb[0],\r\n      g: rgb[1],\r\n      b: rgb[2]\r\n    }\r\n  },\r\n  rgbToHsv: function(r, g, b) {\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var d = max - min;\r\n    var h;\r\n    var s = (max === 0 ? 0 : d / max);\r\n    var v = max;\r\n\r\n    if (arguments.length === 1) {\r\n      g = r.g;\r\n      b = r.b;\r\n      r = r.r;\r\n    }\r\n\r\n    switch (max) {\r\n      case min:\r\n        h = 0;\r\n        break;\r\n      case r:\r\n        h = (g - b) + d * (g < b ? 6 : 0);\r\n        h /= 6 * d;\r\n        break;\r\n      case g:\r\n        h = (b - r) + d * 2;\r\n        h /= 6 * d;\r\n        break;\r\n      case b:\r\n        h = (r - g) + d * 4;\r\n        h /= 6 * d;\r\n        break;\r\n    }\r\n    return {\r\n      h: h,\r\n      s: s,\r\n      v: v / 255\r\n    };\r\n  },\r\n  hsvToRgb: function(hsv) {\r\n    var r, g, b, i, f, p, q, t;\r\n    var h = THREE.Math.clamp(hsv.h, 0, 1);\r\n    var s = THREE.Math.clamp(hsv.s, 0, 1);\r\n    var v = hsv.v;\r\n\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n      case 0:\r\n        r = v;\r\n        g = t;\r\n        b = p;\r\n        break;\r\n      case 1:\r\n        r = q;\r\n        g = v;\r\n        b = p;\r\n        break;\r\n      case 2:\r\n        r = p;\r\n        g = v;\r\n        b = t;\r\n        break;\r\n      case 3:\r\n        r = p;\r\n        g = q;\r\n        b = v;\r\n        break;\r\n      case 4:\r\n        r = t;\r\n        g = p;\r\n        b = v;\r\n        break;\r\n      case 5:\r\n        r = v;\r\n        g = p;\r\n        b = q;\r\n        break;\r\n    }\r\n    return {\r\n      r: Math.round(r * 255),\r\n      g: Math.round(g * 255),\r\n      b: Math.round(b * 255)\r\n    };\r\n  },\r\n  update: function(oldData) {\r\n    if (!oldData) return\r\n    this.background.setAttribute('color', this.data.backgroundColor)\r\n  },\r\n  tick: function() {},\r\n  remove: function() {},\r\n  pause: function() {},\r\n  play: function() {}\r\n});\r\n\r\nAFRAME.registerPrimitive('a-colorwheel', {\r\n  defaultComponents: {\r\n    colorwheel: {}\r\n  },\r\n  mappings: {\r\n    disabled: 'colorwheel.disabled',\r\n    backgroundcolor: 'colorwheel.backgroundColor',\r\n    showselection: 'colorwheel.showSelection',\r\n    wheelsize: 'colorwheel.wheelSize',\r\n    selectionsize: 'colorwheel.selectionSize',\r\n    showhexvalue: 'colorwheel.showHexValue',\r\n    showswatches: 'colorwheel.showSwatches',\r\n    swatches: 'colorwheel.swatches'\r\n  }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = {\r\n  emit: (el, name, data)=> {\r\n    el.dispatchEvent( new CustomEvent(name, {detail: data}) );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/copy-to-clipboard/index.js\n// module id = 3\n// module chunks = 0","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/toggle-selection/index.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}